<?xml version="1.0" encoding="utf-8"?>






<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Volkan Ulutaş</title>
        <link>http://volkanulutas.com/</link>
        <description>Volkan Ulutaş Software Engineer Yazılım Mühendisi</description>
        <generator>Hugo 0.89.4 https://gohugo.io/</generator>
        
            <language>tr</language>
        
        
            <managingEditor>volkanulutas@gmail.com (Volkan Ulutaş)</managingEditor>
        
        
            <webMaster>volkanulutas@gmail.com (Volkan Ulutaş)</webMaster>
        
        
            <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright>
        
        <lastBuildDate>Sun, 12 Dec 2021 17:05:10 &#43;0300</lastBuildDate>
        
            <atom:link rel="self" type="application/rss&#43;xml" href="http://volkanulutas.com/rss.xml" />
        
        
            <item>
                <title>AIAC&#39;2021 Makalemiz Yayınlandı!</title>
                <link>http://volkanulutas.com/posts/2021-12-12-mikroservis-migration/</link>
                <guid isPermaLink="true">http://volkanulutas.com/posts/2021-12-12-mikroservis-migration/</guid>
                <pubDate>Sun, 12 Dec 2021 00:00:00 &#43;0000</pubDate>
                
                    <author>volkanulutas@gmail.com (Volkan Ulutaş)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright>
                
                    <description>&lt;img src=&#34;http://volkanulutas.com/images/mikroservismakale/1.jpeg&#34; height=&#34;600&#34; width=&#34;800&#34;&gt;
&lt;p&gt;Merhabalar, AIAC&#39;21&amp;rsquo;de (Ankara International Aerospace Conference) TUSAŞ&amp;rsquo;ta yapmış olduğumuz çalışmaların bir özeti olarak yayınlanan ve sunumunu yapmış olduğumuz, &amp;ldquo;Uzay Yer Yazılımlarında Monolitik Mimariden Mikroservis Mimarisine Geçiş&amp;rdquo; makalemize &lt;a href=&#34;http://aiac.ae.metu.edu.tr/paper.php?No=AIAC-2021-137&#34;&gt;buradan&lt;/a&gt; ulaşabilirsiniz. Ayrıca tam metni de aşağıdaki gibidir, keyifli okumalar.&lt;/p&gt;
&lt;h1 id=&#34;abstract&#34;&gt;ABSTRACT&lt;/h1&gt;
&lt;p&gt;This article reports the experiences and lessons learned during the incremental migration to
the microservices architecture of the Monitoring and Control Software (MCS), which is
developed in a monolithic architecture by Turkish Aerospace Inc. The problems encountered
in the monolithic architecture, the experiences about how these problems are solved with the
microservices architecture, the decisions made and technology choices are explained. This
study covers the migration steps taken to migrate the MCS to the microservices architecture;
it was aimed to explain the separation of the modules (functional decomposition) in the
existing architecture into microservices using domain-driven design, flexibility, accessibility,
scalability, and distribution.&lt;/p&gt;
&lt;h1 id=&#34;introduction&#34;&gt;INTRODUCTION&lt;/h1&gt;
&lt;p&gt;The Monitoring and Control Software is a complex application that requires high level of
domain knowledge, may contain more than one programming language, and is developed
using monolithic architecture by more than one team. When software developers need to add
a new feature to the system, they need to learn the entire codebase, and analyze its impact
on other modules. When the software, designed with monolithic architecture, becomes more
complex, maintenance and managing costs increase. [Furda, 2018]
In microservices architecture, by decomposition of the services according to the domain
knowledge, it is possible to develop reliable and robust software. Moreover, usage of
microservices architecture reduces the adaptation time of a software developer to the project
[Evans, 2003].&lt;/p&gt;
&lt;p&gt;A new software developer learns the structure of the services divided into small parts instead
of learning the entire codebase after joining the project. Another factor that facilitates project
management process is that software project managers divide human resources into teams
according to the domain [ECSS-E-ST-40C, 2009].&lt;/p&gt;
&lt;p&gt;For projects that require expertise such as satellite management systems, dividing the
software into small services reduces complexity, cost of development, testing, and
maintenance. During the lifetime of the satellite which has limited resources, failures in the
ground software must be fixed in a short time so that they do not affect satellite operations. It
takes time to resolve the errors and analyze the impacts of the errors on software designed
in a monolithic architecture. All the tests of the application should be rerun and all the
software should be updated in the production environment. This will cause the system to be
interrupted during the system update. In microservices architecture, after the source of the
error is identified and the solution is implemented, only the tests of the related service should
be run and source code should be deployed to the production environment. During the
update of the related service, the rest of the system is not affected and the operations remain
uninterrupted.&lt;/p&gt;
&lt;p&gt;It may be necessary to use different programming languages for tasks which have different
requirements such as performance, security, and environment. It is difficult to use different
programming languages in software developed in a monolithic architecture. It becomes
possible to develop each service in different languages in the microservices architecture, as
the services can work independently from each other. Thus, dependency on a programming
language is reduced and selection of problem-specific language and technology can be
made. A similar situation applies to databases. Since each service stores its data on its own
database, it is possible to select the database technology of the services according to non -
functional requirements. For example, using a NoSQL database in one microservice may be
efficient, while a relational database for another service may provide better results. In this
way, it is possible to use problem-specific technologies by eliminating dependencies on any
particular technology.&lt;/p&gt;
&lt;h1 id=&#34;method&#34;&gt;METHOD&lt;/h1&gt;
&lt;h1 id=&#34;monolithic-architecture&#34;&gt;Monolithic Architecture&lt;/h1&gt;
&lt;p&gt;A monolithic architecture is built as a single, self-contained unit where all business logic and
components are combined in a single application which are designed to handle multiple
tasks such as processing telemetry data which is retrieved from satellite, handling
telecommand data which is sent from ground software to satellite, managing event data and
generating space system model (ex. XTCE data). All domain-driven functionality is enclosed
into a single application whose modules cannot be run separately. This type of design is
tightly-coupled and all code exists inside a single codebase which means that the entire
application is deployed at the same time, and scaling is achieved by adding additional
machines horizontally with the help of a load-balancer [Lewis and Fowler, 2014]. Although
deployment time and complexity is low, lots of drawbacks occur when the application
becomes larger and the team grows in size:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Intelligibility&lt;/li&gt;
&lt;li&gt;Manageability&lt;/li&gt;
&lt;li&gt;Deployment&lt;/li&gt;
&lt;li&gt;Scalability&lt;/li&gt;
&lt;li&gt;Commitment to technology stack&lt;/li&gt;
&lt;li&gt;Learning curve difficulty&lt;/li&gt;
&lt;li&gt;Single point of failures&lt;/li&gt;
&lt;li&gt;Testing activities required long time&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Software developed in accordance with monolithic architecture are generally developed
using client-server and a common database. A relational database, server application and
desktop client applications have been developed with a similar approach in satellite ground
software.&lt;/p&gt;
&lt;img src=&#34;http://volkanulutas.com/images/mikroservismakale/2.jpeg&#34; height=&#34;600&#34; width=&#34;800&#34;&gt;
Figure 1: Monolithic architecture of MCS
&lt;h1 id=&#34;microservices&#34;&gt;Microservices&lt;/h1&gt;
&lt;p&gt;Microservices are an architectural and organizational approach to software development
where software is composed of small independent services that communicate with over
lightweight technologies (e.g. HTTP API, AMQP.) [Lewis and Fowler, 2014] Because of
their small size, they are easier to manage and more fault-tolerant, as a single service failure
will not bring the entire system down, as a monolithic design would. As a result, this design
style enables for the development of architectures that are flexible, modular, and easy to
adapt.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Flexibility&lt;/li&gt;
&lt;li&gt;Resilience&lt;/li&gt;
&lt;li&gt;Scalable&lt;/li&gt;
&lt;li&gt;Deployment&lt;/li&gt;
&lt;li&gt;Free to choose technology stack&lt;/li&gt;
&lt;li&gt;Ease of learning curve&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Microservices solve these problems by allowing separate development teams to build and
deploy small services; the resulting flexibility allows teams to focus on enhancing each
service and improving business value. Thus, DevOps (Development and Operations) and
Continuous Delivery are a good fit for microservices architectures in practice. [Fowler, 2016.]&lt;/p&gt;
&lt;p&gt;Migrating from a monolithic system into microservices is a type of software modernization,
also known as application modernization, platform modernization or legacy modernization
that conversion, rewriting or porting of a legacy system to modern architecture, software
libraries, protocol or hardware. [Chiang, 2006]
Migration of Monitoring and Control Software to microservices architecture
There are four software modernization techniques which can be applied when migrating from
monolithic systems to microservices:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Big Bang Approach&lt;/li&gt;
&lt;li&gt;Adding New Feature as a Separate Service&lt;/li&gt;
&lt;li&gt;Split Frontend and Backend&lt;/li&gt;
&lt;li&gt;Extract Services&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;big-bang-approach&#34;&gt;Big Bang Approach:&lt;/h1&gt;
&lt;p&gt;Big Bang approach is defined as creating a new application from scratch. It seems simple to
migrate in this way but there are some problems that need to be taken into account. This
approach is based on rewriting the entire system. Therefore, it will take undesired amounts of
time and effort. Because of these reasons, there are alternative strategies that propose
refactoring the system incrementally which are more common.&lt;/p&gt;
&lt;h1 id=&#34;adding-new-feature-as-a-separate-service&#34;&gt;Adding New Feature as a Separate Service:&lt;/h1&gt;
&lt;p&gt;The decision to migrate from a monolith to a microservices architecture is often made
because of the difficulties experienced in managing the monolithic system. As the monolithic
system grows adding a new feature becomes more difficult. This approach propo ses
developing the new feature as a separate microservice rather than adding into a monolithic
application. With this approach the new system consists of the unchanged legacy monolith
and a newly created microservice with the added feature. Such a system requires a request
router to route the requests regarding the new feature to the microservice and the rest of the
requests to the legacy monolith. The request router handles the HTTP requests similar to the
API Gateway. The new microservice can communicate with the monolith by invoking a
remote API, access the monolith’s database directly or copy of the corresponding monolith
data and synchronize between applications. This approach prevents the monolithic
application from becoming more complex and allows teams to gain experience with
microservices architecture but not solve the problems arising from the monolith. [Richardson,
2016]. This approach can be considered as an initial strategy for migrating from a monolith to
a microservices architecture.&lt;/p&gt;
&lt;p&gt;Long-term archive service is responsible for the storage and management of long-term data
and also serves data to the client application in the MCS. Long-term archive service was a
new feature that needed to be developed. It was developed with this technique as a separate
microservice and integrated with the monolith.&lt;/p&gt;
&lt;h1 id=&#34;split-frontend-and-backend&#34;&gt;Split Frontend and Backend:&lt;/h1&gt;
&lt;p&gt;An enterprise application usually consists of three layers. The presentation layer has the user
interfaces that the user can use to interact with the application. It can also handle HTTP
requests. Business logic layer is responsible for processing the user inputs. It also serves as
a bridge between the presentation layer and the data-access layer. This layer has domain
specific logic. The data access layer is responsible for accessing the data which is stored in
the database and data from the message brokers and providing this data to the business
logic layer.&lt;/p&gt;
&lt;p&gt;This modernization strategy suggests separating the presentation layer from the
business logic and data access layers. This allows the teams to develop and test easily both
the frontend and backend. After splitting the frontend and backend into two applications,
remote APIs must be implemented to enable communication between them. As in the first
strategy this is only a step for migrating from a monolith to a microservice because these two
applications could still become a monolith.&lt;/p&gt;
&lt;p&gt;The client side of the MCS was developed as a desktop application and has common
dependencies and data models with the server side. Based on this technique, the client side
and the server side were separated from each other and REST APIs were developed for
their communication. This separation is also the first step of developing the client side as a
web application with the new technologies.&lt;/p&gt;
&lt;h1 id=&#34;extract-services&#34;&gt;Extract Services:&lt;/h1&gt;
&lt;p&gt;In monolithic architecture there are many modules in the application. These modules could
be microservice candidates while migrating the architecture from monolith to microservice.
There are some techniques for choosing and prioritizing the modules that need to be
extracted from a monolith as a microservice. As a starting point it will be a good choice to
start with the smaller and simple modules rather than the complex ones. Once the extraction
starts from the simple modules the monolith starts to shrink and the teams start to gain
experience on microservices architecture. Modification frequency on the module is an
important sign for choosing the modules to extract. If there are too many changes or planned
feature additions on the module, there will be positive impact on development time and effort
after extracting that module to a standalone microservice. In addition to these techniques,
modules could be chosen according to their system requirements or availability
requirements. For example, if the module has a task that requires too much memory or CPU
then deploying that module as a standalone service will be important when considering
scalability and availability concerns.&lt;/p&gt;
&lt;p&gt;After determining the modules to be extracted, defining an interface between the extracted
service and the monolith is the first step. Implementing and refactoring domain-specific parts
may be difficult because of the dependencies between modules and data models but when
the interface is defined clearly these parts become easier to implement.
All the modules in the MCS monolithic architecture were analyzed, prioritized and extracted
with this technique while migrating from monolithic architecture to microservices architecture.
The migration from monolithic to the microservices architecture is planned in four stages.
In the first stage, researches have been conducted on usage of the auxiliary services and
technologies in the microservices architecture. As a result of these researches, it was
decided to use REST (Representational State Transfer) API for simultaneous messaging and
AMQP (Advanced Message Queue Protocol) technology for asynchronous inter-microservice
communication.&lt;/p&gt;
&lt;p&gt;Unlike the monolithic architecture, multiple services on the server side need to communicate
with each other and the client side in the microservices architecture. A router is needed to
avoid the uncertainty of which service should respond to a request sent by the client. As a
result of the researches carried out at the first stage, it was decided to use API-Gateway as a
router. API-Gateway allows the requests received from the client to be routed to the relevant
microservices through the REST interface. Thanks to the identification and authorization
capability of API-Gateway, the requests from the client are authorized and directed to the
relevant microservice. The requests from unauthorized users are rejected.
API Gateway is responsible for request routing. All the requests made by the client go
through the API Gateway. After that, the API Gateway routes requests to the appropriate
microservice. However, at this point, a problem about checking whether the services were up
or not was encountered. Service Discovery allows us to get the health information of the
microservices on the server-side and routes the requests to the microservices that are
running. When the microservices are ready to operate, they are registered to Service
Discovery, which runs redundantly in the system as an independent service. Service Discovery reports server states by periodically checking whether applications are running or not.&lt;/p&gt;
&lt;p&gt;In the second stage, the MCS was developed according to the principles of domain-driven
design, and the microservices architecture shown in Figure 2.&lt;/p&gt;
&lt;img src=&#34;http://volkanulutas.com/images/mikroservismakale/3.jpeg&#34; height=&#34;600&#34; width=&#34;800&#34;&gt;
 Figure 2: Microservices architecture of the MCS and it’s technology stack
&lt;p&gt;The determination of the complexity of the services to be included is another problem
encountered during the migration from a monolithic architecture to a microservices
architecture. The main goal of microservices architecture is to separate the system into
software components focused on a single purpose that is independent of each other
[Newman, 2015]. In systems such as MCS where multiple tasks (e.g. telemetry processing,
telecommand generation, logging, archiving) are performed sequentially in a chain structure.
It is necessary to decide which stages of these tasks should be developed as separate
services. One solution is to develop a separate microservice for all the stages. However, in
this way, there may be excessive amount of services in the system. This will increase the
complexity of management, distribution, and inter-communication with other microservices. It
will contradict with the principle of increasing simplicity and clarity, which is one of the
starting points of the microservices architecture approach. Therefore, it would be more
appropriate to divide monoliths according to the purpose of the use of the software. Using the
domain-driven design model and the migration strategies which are mentioned previously,
the MCS is divided into the following microservices:&lt;/p&gt;
&lt;p&gt;TM Service (Telemetry Service): It is the service where the telemetry data is received from
the TM I/O service (Telemetry Input / Output service). The telemetry is decoded, processed,
and served to the client application and other services that need this data according to the
definitions that are provided by the Space Model Service.
TM I/O Service (Telemetry Input / Output Service): It is the service in which raw data are
received from the satellite. TM I/O service establishes a connection with the SLE (Space
Link Extension) service to communicate with the satellite. TM I/O service is also responsible
for the storing of raw data.&lt;/p&gt;
&lt;p&gt;SLE Service (Space Link Extension Service): SLE Service implements the SLE standard
which is a reference model that identifies a set of SLE Transfer Services that enable
missions to send forward space link data units to a spacecraft and to receive/return space
link data units form a spacecraft [CCSDS, 2015].
TC Service (Telecommand Service): It is the service where the telecommands are to be sent
to the TC I/O Service (Telecommand Input / Output Service). The telecommand is encoded,
processed, and presented to the client application and other services that need this data
according to the definitions in the Space Model service.
TC I/O Service (Telecommand Input / Output Service): It is the service which establishes a
connection between the satellite and the SLE service. The service is also responsible for
saving the raw telecommand data.&lt;/p&gt;
&lt;p&gt;Event Log Service: It is the service that serves the event and warning notifications to the
client application generated by the services and the satellite.
Settings Service: It is a service where satellite-specific and domain-oriented settings are
kept. It retrieves settings information from other services and stores them in it’s database. It
also provides settings to the client application and informs the related services in case of
changes on settings made by the client application.
Space Model Service: It creates data structures (telecommand, telemetry, and parameter
models) necessary for decoding and encoding operations between satellite software and the
MCS, storing and versioning changes, and it is the service that notifies these changes to the
client application and the related services.
Long-Term Archive Service: There is a need for short-term and long-term archiving of certain
database information specific to the domain and the requirements. This service is responsible for the storage and management of long-term data. It also serves data to the client application.
Auxiliary Services: It aims to increase the efficiency of development and maintain processes
by integrating services such as configuration management service, service discovery, APIGateway, identification and authorization, load balancing, circuit-breaking, data observability,
and other technologies [ECSS-Q-ST-80C, 2009].&lt;/p&gt;
&lt;p&gt;All of these services, which include messaging, monitoring, and logging make up the
architecture&amp;rsquo;s infrastructure. To ensure high availability and performance, all of these
infrastructure systems run in clusters. This is called load scalability.
In the third stage, the details of the microservices architecture design were developed using
the chosen programming language and appropriate design patterns. In this stage, difficulties
were encountered such as communication among microservices, integration of developed
services, communication of user interface and services.&lt;/p&gt;
&lt;p&gt;In the fourth stage, it is planned to discuss the approaches for managing the additional
testing complexity of multiple independently deployable components as well as how to have
tests and the application remain correct despite having multiple teams each acting as
guardians for different services [Lewis, 2014]. Unit testing, integration testing, component
testing, contract testing and end-to-end testing scenarios will be applied.&lt;/p&gt;
&lt;h1 id=&#34;challenges&#34;&gt;CHALLENGES&lt;/h1&gt;
&lt;p&gt;Microservice design seeks to address the challenges associated with monolithic systems. In
addition to the advantages of microservices architecture, there are also some challenges that
need to be overcome. These challenges are described as follows.
Service Discovery: In the monolithic architecture, the addresses and ports to be reached do
not change dynamically and are kept statically in some properties or settings files. Due to the
use of static addresses in the monolithic architecture, service discovery is not needed, but
the situations are different in microservices architecture. Since the addresses of the services
are determined dynamically in the microservices architecture, when a service communicates
with another service, it cannot know the address of the service with which it will communicate
directly. The mechanism by which these dynamically changing service addresses are
managed is called service discovery. Service registry is the main part of service discovery.
The service registry works like a database, that is, it is the section where the addresses of
the services are stored. [Richardson, 2015]
There are two service discovery patterns: client-side discovery and server-side discovery. In
the client-side discovery, the requesting service obtains the address directly by querying the
service registry. [Richardson, (n.d.)] In the server-side discovery, there is a router between
the service and the service registry, so the requesting service obtains the address from the
registry via the router [Richardson, (n.d.)] We preferred to use server-side discovery instead
of client-side discovery in our application.
Service instances must be registered with and deregistered from the service registry. There
are two ways for this: self-registration pattern and third-party registration pattern. In the selfregistration pattern, the service instances register and deregister themselves to/from the
service registry so this responsibility is on the services themselves. In the third-party
registration pattern, the other component is responsible for the registration and deregistration
of the services. [Richardson, 2015] We preferred to apply self-registration pattern instead of
the third-party registration pattern in our application.&lt;/p&gt;
&lt;p&gt;We used Netflix Eureka and Apache Zookeeper technologies while developing the concept
of service discovery in our application.
Interservice Communication: There are two basic communication types between
microservices. Synchronous communication is a communication pattern where one
microservice calls an API which is exposed by another microservice and waits for the
response. HTTP and gRPC protocols are used for this type of communication. On the other
hand asynchronous communication is a communication pattern where one microservice
sends a message to other microservices without waiting for any response. There are both
advantages and disadvantages between these communication types. [Smid, Wang and
Cerny, 2019] According to the requirements both patterns are used in the MCS.
As a synchronous communication example in the MCS, when microservices need telemetry
or telecommand definitions as a data structure they need to request these information from
Space Model Service. After a request is received via an HTTP request, Space Model Service
provides the information synchronously. This type of communication is not complex and is
easy to trace. Because of the easy tracing, error handling is much easier than asynchronous
messaging. For synchronous messaging, both services must be available and must work
properly.&lt;/p&gt;
&lt;p&gt;Telecommand status updates must be notified by Telecommand Service to other
microservices after commands are sent to the satellite. These telecommand status update
notifications are sent asynchronously. In the MCS, RabbitMQ is used as an AMQP protocol
for asynchronous messaging. Because the sender microservice does not need to know the
receiver microservice, coupling is reduced in this type of communication. These status
updates must be notified to more than one microservices therefore pub/sub model is used to
notify subscribers to handle this requirement. Queue brokers could be scaled easily
according to the workload. When handling failure cases in services, asynchronous
messaging protocols have some advantages over synchronous messaging protocols. For an
asynchronous messaging protocol, it is not important whether the receiver microservice is
available or not. Because when the failure in the receiver microservice is fixed or revised with
updates on that microservice, messages will be received from the queue broker. But
installing and managing message broker makes another operational complexity to handle
and could be a bottleneck of the system therefore it must be configured properly. [“Designing
interservice communication for microservices”, 2019] As another advantage of asynchronous
messaging, when the request needs data from more than one service latency will be
increased in synchronous messaging. For example, if Service A needs data which is stored
in Service B and Service C partially, then Service A sends a request to Service B and after
that request Service B must send a request to Service C. Number of services could be more
than two according to stored data types or the complexity of the data. As the number of
requested services are increased, the amount of latency may also increase. On the other
hand, latency could also be a problem for asynchronous messaging when message queues
becomes overloaded.&lt;/p&gt;
&lt;p&gt;Configuration Management Service: This service mainly serves a purpose of updating
service settings without the need of redeployment. The source code and program
configurations should be stored in two different repositories. Although it may be necessary to
synchronize these repositories when the configuration keys change, they should be handled
independently of one another. Besides, any updates on the configuration repository should
be notified to the running services, which they should then respond accordingly.
Circuit Breaker: A client or a requester service usually make remote calls to a target service
running in different machines across a network. One of the big difference between in -
memory calls and remote calls can fail, or hang without a response until some timeout limit is
reached. If there are high number of unresponsive calls, the system may run out of critical
resources leading to cascading failures across more than one service. It may cause a single point of failure thus that can be overcome. The purpose of the circuit breaker is to solve this
problem. The remote call is wrapped with a circuit breaker object, which monitors for failures.
Once the failures reach a predefined threshold, the circuit breaker forwards remote calls to
an alternative service, or returns an error message. This will make sure the service is
responsive. There are three states in the circuit breaking mechanism. When everything is
normal, the circuit breaker is in the closed state. When the failures exceed the predefined
threshold, it goes into the open state or half-open state. When the circuit breaker is in the
open state, the remote calls are forwarded to an alternative service or a default error
message is returned. When the circuit breaker switches to a half-open state, it tests if the
underlying problem persists. [Lewis, 2014]&lt;/p&gt;
&lt;p&gt;Load Balancing: There are two types of load balancing methods used in the MCS, internal
and external load balancing. In internal load balancing, each server should have an internal
load balancer that retrieves a list of available instances of a requested service from the
service registry using a service registry client. The internal load balancer will then use local
metrics, such as the response time of the instances, to manage the load between the
accessible instances. An internal load balancer reduces the need to set up an external load
balancer and requires various load balancing methods to be used by different service clients.
In external load balancing, an external load balancer may be established, which retrieves the
list of available instances from the service registry and balances the load between service
instances using a centralized algorithm. This load balancer will act as a proxy (which is not
suggested) or an instance address locator. Another option is to use a service registry with
built-in load balancing capabilities and the ability to serve as a load balanced address
locator.&lt;/p&gt;
&lt;h1 id=&#34;future-work&#34;&gt;FUTURE WORK&lt;/h1&gt;
&lt;p&gt;The containerization technology is widely used to deploy applications in microservices
architecture. By containerization, the developed applications can run independent from the
platform and their dependencies can be used in isolation. In this way, the developed
applications exhibiting a different operating behavior in different environments can be
prevented. Docker is used to manage and deploy the MCS microservices we have
developed to the target environment. Docker images of microservices are created, versioned
and stored in the artifactory manager.
Creating Docker images is not enough to run applications. A container orchestration tool is
needed for operations such as checking the health status of running applications, restarting
them in case of failures, and scaling applications. At this point, we use Kubernetes to
manage MCS microservices. When it is desired to run services with different parameters in
different environments such as development, test and production, there is a need to make
changes in the Kubernetes configuration files. For future work, it is planned to use Helm
Charts or a similar tool to resolve this issue.
Non-functional needs such as traceability, load balancing and monitoring appear as services
and software parts that are both critical and time-consuming to code. Developing these nonfunctional but necessary code increases the complexity and maintainability of the overall
system. At the point where we want to get rid of this complexity, we come across the concept
of service mesh.&lt;/p&gt;
&lt;p&gt;Service Mesh is an architectural layer that offers the solution of many non-functional
problems that a service should consider. It is mainly used for observability, traffic
management and security. The fact that service mesh can perform operations such as
discovery, load balancing, failure recovery, metrics, encryption, traceability,
authentication/authorization and monitoring without the need for any coding creates a very
advantageous situation for developers. [Calcote and Butcher, 2019]&lt;/p&gt;
&lt;p&gt;There are many products that offer service mesh, we have found it appropriate to use Istio
for our future work. Istio works with Docker and Kubernetes. It has two parts, the data plane
and the control plane. The data plane manages the network traffic between services. Istio
uses the proxy to control all network traffic and it is called sidecar or envoy proxy. The control
plane is responsible for controlling the proxy according to the values of the configurati on. It
allows proxy to be reprogrammed when the configuration is updated. Istio has its own add -
ons that allow direct use of Zipkin, Grafana, Jeager, Kiali and Prometheus. [“The Istio service
mesh”, (n.d.)]
Further studies will be carried out to improve on issues such as redundancy, fault tolerance,
and durability in the microservices architecture. In addition to service redundancy, studies will
be carried out to ensure that databases in each service work with backup. It is planned to
work on the efficient use of logging and visualization infrastructure and security architecture.
Future work will consist of experience on containerization, continuous integration and
delivery approaches of services.&lt;/p&gt;
&lt;p&gt;** DISCUSSION&lt;/p&gt;
&lt;p&gt;There are some disadvantages of the microservices architecture. The biggest disadvantage
of a microservices architecture is it’s increased complexity over a monolithic application. It is
difficult to manage a large number of services in the microservices architecture. As
microservices rely on messaging, it increases communication cost (network latency,
message processing). It is more difficult to test and monitor the system. It is also more
difficult to maintain transaction management (security, consistency, atomicity, rollback etc).
Microservices architecture provides eventually consistency because of its distributed
structure. Therefore, if the system requires transactional consistency, then the microservices
architecture is not a suitable design solution. Despite these disadvantages, the migration of
monolithic architecture to microservices architecture is aimed due to the reasons that it
provides better scalability, higher availability, increased fault tolerance, support of any
development platform, different language and technologies for the services.&lt;/p&gt;
&lt;h1 id=&#34;conclusion&#34;&gt;CONCLUSION&lt;/h1&gt;
&lt;p&gt;In this paper, we have analyzed a paradigmatic case study of a mission-critical system: the
Monitoring and Control Software of Turkish Aerospace. We have investigated both the
legacy monolithic architecture and the new microservices architecture. Both architectures
have been documented in terms of their domain-driven design, implementation, scalability,
flexibility, accessibility, and distribution.
This has resulted in a thorough investigation of how to divide a monolithic service into many
services that leverage domain-driven knowledge about space systems. Re-engineering of
the transformation of monolithic service into microservices led to reduced complexity, lower
coupling, higher cohesion, and simplified integration.&lt;/p&gt;
&lt;h1 id=&#34;references&#34;&gt;References&lt;/h1&gt;
&lt;p&gt;Chiang, C., and Bayrak, C. (2006), &amp;ldquo;Legacy Software Modernization,&amp;rdquo; 2006 IEEE
International Conference on Systems, Man and Cybernetics, pp. 1304-1309, doi:
10.1109/ICSMC.2006.384895, Oct 2006.&lt;/p&gt;
&lt;p&gt;Calcote, L., Butcher Z. (2019) Istio Up and Running.O&amp;rsquo;Reilly Media, Inc., 2019.
Designing interservice communication for microservices. (2019), available on
&lt;a href=&#34;https://docs.microsoft.com/en-us/azure/architecture/microservices/design/interservicecommunication&#34;&gt;https://docs.microsoft.com/en-us/azure/architecture/microservices/design/interservicecommunication&lt;/a&gt;
Evans E. (2003) Domain-Driven Design: Tacking Complexity in the Heart of Software.
Addison-Wesley Longman Publishing Co., Inc., Boston, MA, USA, 2003.&lt;/p&gt;
&lt;p&gt;European Cooperation for Space Standardization (2009), ECSS-E-ST-40C Space
Engineering – Software.&lt;/p&gt;
&lt;p&gt;European Cooperation for Space Standardization (2009), ECSS-Q-ST-80C Software Product
Assurance.&lt;/p&gt;
&lt;p&gt;Fowler, S. J. (2016) Production-ready Microservices: Building Standardized Systems Across
an Engineering Organization. O’Reilly Media, Inc., 2016.&lt;/p&gt;
&lt;p&gt;Furda, A., Fidge, C., Zimmermann, O., Kelly, W., Barros, A. (2018) Migrating Enterprise
Legacy Source Code to Microservices, IEEE Software.
Lewis, J. and Fowler, M. (2014). Microservices, available on
&lt;a href=&#34;http://martinfowler.com/articles/microservices.html&#34;&gt;http://martinfowler.com/articles/microservices.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Newman, S. (2015). Building Microservices. O’Reilly.&lt;/p&gt;
&lt;p&gt;Richardson, C. (n.d.) Pattern: Client-side service discovery, available on
&lt;a href=&#34;https://microservices.io/patterns/client-side-discovery.html&#34;&gt;https://microservices.io/patterns/client-side-discovery.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Richardson, C. (n.d.) Pattern: Server-side service discovery, available on
&lt;a href=&#34;https://microservices.io/patterns/server-side-discovery.html&#34;&gt;https://microservices.io/patterns/server-side-discovery.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Richardson, C. (2015) Service Discovery in a Microservices Architecture, available on
&lt;a href=&#34;https://www.nginx.com/blog/service-discovery-in-a-microservices-architecture/&#34;&gt;https://www.nginx.com/blog/service-discovery-in-a-microservices-architecture/&lt;/a&gt;
Richardson, C. (2016) Refactoring a Monolith into Microservices, available
on &lt;a href=&#34;https://www.nginx.com/blog/refactoring-a-monolith-into-microservices/&#34;&gt;https://www.nginx.com/blog/refactoring-a-monolith-into-microservices/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Space Link Extension – Internet Protocol for Transfer Services (2015), Blue Book CCSDS
913.1-B-2.&lt;/p&gt;
&lt;p&gt;Smid, A., Wang, R., and Cerny, T. (2019). Case study on data communication in
microservices architecture. In Proceedings of the Conference on Research in Adaptive and
Convergent Systems (RACS &amp;lsquo;19). Association for Computing Machinery, New York, NY,
USA, 261–267.&lt;/p&gt;
&lt;p&gt;The Istio service mesh, (n.d.) available on &lt;a href=&#34;https://istio.io/latest/about/service-mesh/&#34;&gt;https://istio.io/latest/about/service-mesh/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Bu şekilde kurulumu tamamlanmış olduk. Soru, görüş ve önerilerinizi bu sayfaya yorum yapabilirsiniz. Bana erişmek için &lt;a href=&#34;mailto:volkanulutas@gmail.com&#34;&gt;volkanulutas@gmail.com&lt;/a&gt; adresini kullanabilirsiniz.&lt;/p&gt;
</description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/categories/mikroservis/">Mikroservis</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/spring-mikroservis-monolitik-monotikten-mikroservise-ge%C3%A7i%C5%9F-tusa%C5%9F-uzay-sistemleri-yer-yaz%C4%B1l%C4%B1mlar%C4%B1/">Spring, Mikroservis, Monolitik, Monotikten Mikroservise Geçiş, TUSAŞ, Uzay Sistemleri, Yer Yazılımları</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>Mikroservis Mimarisinde Karşılaşılan Performans Sorunları ve Çözümleri</title>
                <link>http://volkanulutas.com/posts/2021-12-05-mikroservis-performans/</link>
                <guid isPermaLink="true">http://volkanulutas.com/posts/2021-12-05-mikroservis-performans/</guid>
                <pubDate>Sun, 05 Dec 2021 00:00:00 &#43;0000</pubDate>
                
                    <author>volkanulutas@gmail.com (Volkan Ulutaş)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright>
                
                    <description>&lt;img src=&#34;http://volkanulutas.com/images/performance/1.jpeg&#34; height=&#34;600&#34; width=&#34;800&#34;&gt;
&lt;p&gt;Merhabalar, bu yazı serimizde mikroservis mimarisinde yaygın olarak karşılaşılan 9 performans sorununu ve çözümlerini inceleyeceğiz. Bu ilk yazımızda kısaca sorunları kısaca açıklayıp daha sonra detaylı olarak inceleyeceğiz. Bu çözümlemelerimizi yaparken genellikle Java/Spring teknolojilerini kullanacağız. Şimdi bu 9 problemi listeyelim:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;N+1 Problemi&lt;/li&gt;
&lt;li&gt;Asenkron İsteklerin Kullanımı&lt;/li&gt;
&lt;li&gt;Antipattern Kullanımı&lt;/li&gt;
&lt;li&gt;Aşırı Etkin Mikroservisleri Kısıtlama&lt;/li&gt;
&lt;li&gt;3.Taraf İsteklerin Yönetimi&lt;/li&gt;
&lt;li&gt;Uygulama Ceiling&amp;rsquo;den Kaçınma&lt;/li&gt;
&lt;li&gt;Uygun Veri Tabanı Seçimi&lt;/li&gt;
&lt;li&gt;Veritabanı İsteklerinin Cache&amp;rsquo;lenmesi&lt;/li&gt;
&lt;li&gt;Veritabanı Bağlantı Pool&amp;rsquo;ları&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;“The survey found that 33% of Java development professionals consider combined application performance to be the biggest challenge in microservices
development. An additional 29% of respondents reported troubleshooting microservice-to-microservice performance as their
biggest challenge.”
&lt;a href=&#34;https://www.perforce.com/&#34;&gt;Perforce Survey&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Perforce tarafından yayınlanan anket, Java geliştirme uzmanlarının %33&amp;rsquo;ünün uygulama performansının, mikroservis geliştirmedeki en büyük zorluk olduğunu düşündüğünü ortaya koydu. Katılımcıların ek %29&amp;rsquo;u en büyük zorluk olarak mikroservislerin performans sorunlarını gidermeyi bildirdi.&lt;/p&gt;
&lt;p&gt;Anketinde göstermiş olduğu gibi performans sorunları projelerin belki de en son safhasında göz önüne alındığı için bu sorunlar ortaya çıkabiliyor. Yaygın sorunları projelerin başında ortaya koyup ve yazılımı geliştiren tüm ekiplerde farkındalık yaratılırsa bu sorunlar ortaya çıkmadan çözümlenmiş olur. Performans sorunları oluşturmanın önüne geçen bu farkındalıklar sayesinde yüksek maliyetlerden kaçınmış oluruz çünkü bu sorunları çözmek için projenin son safhalarında büyük mimari ve yapı değişikliklerine gitmemiz gerekebilir.&lt;/p&gt;
&lt;p&gt;Şimdi bu problemlere göz atalım:&lt;/p&gt;
&lt;h2 id=&#34;n1-problemi&#34;&gt;N+1 Problemi&lt;/h2&gt;
&lt;p&gt;Yazılım tasarımındaki en büyük performans sorunlarından olarak görülen N+1 problemi, veritabanından veri çekerken ortaya çıkar. Nesne yönelimli yaklaşım ile veri tabanlarının ilişkisel dünyası arasındaki paradigma farkından dolayı oluşur. Nesneleri tablolara dönüştürmek ORM (Object Relational Mapping) araçlarını kullanırız. Java/Spring dünyasında ise sıklıkla kullanılan araç Hibernate&amp;rsquo;dir. Hibernate çok performanslı şekilde çalışmasına rağmen bilindik problemlere sahiptir. Örneğin, nesnelerimiz için bir &lt;em&gt;List&lt;/em&gt; veya &lt;em&gt;Set&lt;/em&gt; kullanımı yaptığımızda bunu ORM dünyasında ilişki olarak gösteririz. Bu ilikiler &lt;em&gt;@OneToMany&lt;/em&gt;, &lt;em&gt;@ManyToMany&lt;/em&gt; gibi ilişki türlerine karşılık gelir. N+1 problemi de burada karşımıza çıkar, içerisinde liste bulunan bir nesneyi veritanından çekmek istediğimizde 1 istek ile çekebilirken, bu içeride bulunan &lt;em&gt;List&lt;/em&gt; türündeki veriyi çekmek için &lt;em&gt;N&lt;/em&gt; adet küçük istek yapmamız gerekir ki performans açısından istenmeyen bir durumdur. Yazılım geliştiricinin tek satırda yaptığını düşündüğü bu istek Hibernate tarafından nesnenin boyu kadar yani &lt;em&gt;N&lt;/em&gt; yeni istekle karşılanır. Bu sorunun çözümünü, bu serimizin ilerleyen yazılarında ele alacağız.&lt;/p&gt;
&lt;h2 id=&#34;asenkron-isteklerin-kullanımı&#34;&gt;Asenkron İsteklerin Kullanımı&lt;/h2&gt;
&lt;p&gt;Senkron (eş zamanlı) ve Asenkron (eş zamansız) çağrıların ne zaman kullanılacağının belirlenmesi, uygulama performansı üzerinde büyük bir etkiye sahiptir. Zorunlu kalmadıkça senkron isteklerden kaçınmak gerekmektedir; çünkü bu istekler cevap gelene kadar bekletildiğinden uygulamada dar boğaza neden olabilir. İsteklerin türünün seçimi uygulama domain (uygulamanın alanına) bilgisine göre çok değişkenlik gösterebilse de bu seçimleri örnekleyerek detaylandıracağız.&lt;/p&gt;
&lt;h2 id=&#34;antipattern-kullanımı&#34;&gt;Antipattern Kullanımı&lt;/h2&gt;
&lt;p&gt;Performans anti-kalıpları genellikle yük veya ölçekte birleşen verimsiz sorgular etrafında toplanır. Bu performans anti-kalıpları kullanmak, düşük performansa ve hatta başarısızlığa neden olabilir. Örneğin, N+1 problemi bir anti-kalıp örneğidir. Bu kalıpları kullanmak düşük performansa neden olabileceği gibi bir çok hataya da neden olabilir. Zaman aşımı (time-out) ve yeniden deneme işlemlerinde de anti-pattern kullanımına örnektir. Daha önce belirttiğimiz gibi time-out çözümü sorunu çözmek yerine daha kötü bir hale getirmekteydi.&lt;/p&gt;
&lt;h2 id=&#34;aşırı-etkin-mikroservisleri-kısıtlama&#34;&gt;Aşırı Etkin Mikroservisleri Kısıtlama&lt;/h2&gt;
&lt;p&gt;Bir mikroservisiniz yoğun istekler (yük) aldığı durumda bu isteklerin kısıtlanması veya sabit bağlantı limitlerinin kullanılması, uygulamanın ve diğer servislerin düzgün çalışmasına ve göreceli olarak sistem kaynaklarını adil bir şekilde kullanmasını sağlar. Bu kısıtlamalar uygulamanın genel kullanılabilirliğini sağlarken, aşırı etkin mikroservisin ise yavaşlamasına sebep verir; ancak tüm uygulamanın başarısız olmasını önlemiş oluruz.&lt;/p&gt;
&lt;h2 id=&#34;3taraf-isteklerin-yönetimi&#34;&gt;3.Taraf İsteklerin Yönetimi&lt;/h2&gt;
&lt;p&gt;Uygulamanız en zayıf veya en yavaş servisiniz kadar hızlıdır diye bir cümle kursam yanlış olmaz. Bu yüzden yapmış olduğunuz 3. taraf isteklerinin hızı veya hatası da uygulamamızın hızına ve performansına etki eder. Eğer kullanılan dış API yavaşsa bizim sistemimizinde yavaşlamasına sebebiyet verir ve bu sorunların ele alınması gerekir.&lt;/p&gt;
&lt;h2 id=&#34;uygulama-ceilingden-kaçınma&#34;&gt;Uygulama Ceiling&amp;rsquo;den Kaçınma&lt;/h2&gt;
&lt;p&gt;Düzgün yapılandırılmış ve optimize edilmiş servisler bile performans ceiling&amp;rsquo;ine sahip olabilir. Bu sorun, otomatik ölçeklendirmeye (auto-scaling) bakılarak çözülebilir ve gerektiğinde konteyner ekleyip çıkararak gelen istek yüküne dinamik olarak uyum sağlayabilir.&lt;/p&gt;
&lt;h2 id=&#34;uygun-veri-tabanı-seçimi&#34;&gt;Uygun Veri Tabanı Seçimi&lt;/h2&gt;
&lt;p&gt;Mikroservis mimarisi, herbir servis için farklı veritabanı seçme esnekliğini sunar; ancak mikservisler için yanlış veritabanı teknolojisini seçmek büyük performans sorunlarına neden olabilir. Örneğin, milyon seviyseinde kullanıcısı olan bir fotoğraf ve video paylaşım sistemini düşleyin bunun için ilişkisel veritabanı kullanmak veriye ulaşma ve gösterim maliyetlerini (streaming) çok arttıracaktır ve sistemin düzgün çalışmasını engelleyecektir.
Bu yüzden yazılım geliştiricilerin ilgili mikroservis için uygun veritabanını seçmesi çok önemlidir.&lt;/p&gt;
&lt;h2 id=&#34;veritabanı-isteklerinin-cachelenmesi&#34;&gt;Veritabanı İsteklerinin Cache&amp;rsquo;lenmesi&lt;/h2&gt;
&lt;p&gt;Bir mikroservisin birden çok veritabanına ait bir veri alanını talep ettiğinde, veya tek bir veritabanında uzun süren bir sorgu çağrıldığında performans düşüşleri oluşabilir. Bunun önüne geçmek için ilgili veriya çok sık ulaşıldığı bir durumda varsa ilgili veriyi uygun bir şekilde cache&amp;rsquo;leyerek her defasında veritabanından istemenin önüne geçilmiş olur. Bu da uygulamamızın performansını arttırır.&lt;/p&gt;
&lt;h2 id=&#34;veritabanı-bağlantı-poolları&#34;&gt;Veritabanı Bağlantı Pool&amp;rsquo;ları&lt;/h2&gt;
&lt;p&gt;Bir mikroservis bir veritabanı sorgusu yapacakken (cache&amp;rsquo;leme dışında) veritabanı baplantısı kurar ve ilgili sorgu bitince de hızlı bir şekilde bağlantıyı kapatır. Bağlantı kurmak ve bağlantıyı kapamak kısa ömürlü ve sıkça yapılan sorgular için aşırı maliyet getirir ve performansı düşürür. Bu şekilde her sorgu için bir bağlantı açmak yerine bir bağlantı havuzu (connection pool) yapılandırmak etkin bir çözüm sunar. Bağlantı havuzu, hali hazırda açık bulunan bağlantılar oluşturur ve bir mikroservis bağlantı veritabanına bağlanacakken bu havuzda boş olan bir bağlantıyı kullanır böyle bağlantı açılıp kapatılmak yerine tekrar kullanılmış olur. Bu da performansta artışa sebep olur.&lt;/p&gt;
&lt;p&gt;Bu yazımızın sonuna geldik, detaylı olarak sorunları ve çözümleri ilerleyen yazılarımızda inceleyeceğiz. Sağlıcakla kalın.&lt;/p&gt;
&lt;p&gt;Bu şekilde kurulumu tamamlanmış olduk. Soru, görüş ve önerilerinizi bu sayfaya yorum yapabilirsiniz. Bana erişmek için &lt;a href=&#34;mailto:volkanulutas@gmail.com&#34;&gt;volkanulutas@gmail.com&lt;/a&gt; adresini kullanabilirsiniz.&lt;/p&gt;
</description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/categories/mikroservis/">Mikroservis</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/spring-mikroservis-performans-mikroservis-performans/">Spring, Mikroservis, Performans, Mikroservis Performans</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>Yeniden Merhaba</title>
                <link>http://volkanulutas.com/posts/2021-12-03-yeniden-merhaba/</link>
                <guid isPermaLink="true">http://volkanulutas.com/posts/2021-12-03-yeniden-merhaba/</guid>
                <pubDate>Fri, 03 Dec 2021 00:00:00 &#43;0000</pubDate>
                
                    <author>volkanulutas@gmail.com (Volkan Ulutaş)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright>
                
                    <description>&lt;img src=&#34;http://volkanulutas.com/images/yenidenmerhaba/1.jpg&#34; height=&#34;600&#34; width=&#34;800&#34;&gt;
&lt;p&gt;Merhabalar, blog tutma mecramın kaderinde mi var bilmiyorum; ama uzun bir aradan sonra bir toparlama yazısının iyi olacağını düşünüyorum. Hoş geldiniz tekrardan…&lt;/p&gt;
&lt;h2 id=&#34;neler-yapıyorum&#34;&gt;Neler yapıyorum?&lt;/h2&gt;
&lt;p&gt;Bildiğiniz gibi 2019 yılında yüksek lisans tezimi tamamladım ve bundan blogumda hiç bahsetmediğimi gördüm. Sağlık bilişimi ve insan hareket tanıma üzerine bir tez yayımlanarak mezun oldum. Tezim, hastanın omuz egzersizlerini tanıyarak, doğru yapıp yapmadığını puanlıyor ve hastaya, fizyoterapiste geri bildirim sağlıyor. Hedeflediğim fizyoterapistlere ulaşmakta zorlanan hastalara fırsat eşitliği tanımaktı ki pandemi süreciyle zaten çoğu şeyi uzaktan yapmakta buna katkı sağladı.  Tezime göz atmak veya daha detaylı bilgi edinmek isterseniz &lt;a href=&#34;https://tez.yok.gov.tr/UlusalTezMerkezi/TezGoster?key=npGs9H39x7G6401x51yqpKPfp1SRgK-RWeBZUwH-vHeKlm_Z5FZbqAZziOgLkrp8&#34;&gt;buradan&lt;/a&gt; ulaşabilirsiniz.&lt;/p&gt;
&lt;h2 id=&#34;iş-tarafı-nasıl-gidiyor&#34;&gt;İş tarafı nasıl gidiyor?&lt;/h2&gt;
&lt;p&gt;Bildiğiniz gibi TUSAŞ (TAI) Uzay Sistemlerinde Yer Yazılımları şefliğinde kıdemli yazılım mühendisi olarak çalışmaktayım. Buradan güzel bir haber var. Uzun zamandır beklenen Göktürk-1 Yenileme projesini TUSAŞ üst yüklenici olarak almayı başardı ve uydu yazılımlarını da uçuş ve yer yazılımları olmak üzere bağlı olduğum yazılım mühendisliği birimi yapıyor. Bu konuda ekipçe heyecanlıyız ve bu yoğunluğun gelmesini uzun süredir bekliyorduk.&lt;/p&gt;
&lt;p&gt;Uzun bir çalışmanın ardından Görev Gözlem ve Kontrol isimli uydu komuta kontrol yazılımını monolitik mimariden, mikroservis mimarisine geçişini tamamladık. Bununla ilgili bir yayın oluşturduk buradan ulaşabilirsiniz.&lt;/p&gt;
&lt;p&gt;Şu sıralar masaüstü bir arayüze sahip istemci uygulamamızı modern bir web uygulamasına dönüştürmeye çalışıyoruz. Bunun için React kullanıyoruz ve ekipçe çalışmalarımız sürüyor. Ek olarak çalışmakta olduğum birim sunucu tarafında Java/Spring sevenler ile istemci tarafında ise React kullanan mühendisleri arıyor, eğer TUSAŞ’ta çalışmak isterseniz bana CV’nizi ulaştırabilirsiniz.&lt;/p&gt;
&lt;h2 id=&#34;hobiler-nasıl-gidiyor&#34;&gt;Hobiler nasıl gidiyor?&lt;/h2&gt;
&lt;p&gt;Yılın sonuna doğru daha fazla kitap okumaya çalışıyorum burada onlardan da bahsetmek istiyorum. Okuduklarım arasında beğendiğim birkaç kitap bulunuyor ve onları dile getirmek istiyorum. Zülfü Livaneli’nin &lt;a href=&#34;https://www.kitapyurdu.com/kitap/serenad-karton-kapak/251771.html&#34;&gt;“Serenad”&lt;/a&gt;ı okumadıysanız bir solukta okuyacağınıza eminim. Orhan Pamuk’un &lt;a href=&#34;https://www.kitapyurdu.com/kitap/masumiyet-muzesi/317427.html&#34;&gt;&amp;ldquo;Masumiyet Müzesi&amp;rdquo;&lt;/a&gt;ni okumayı çok geciktirdiğim için de ayrıca üzgünüm bu kitaptaki hikaye ve gerçeklik beni benden aldı diyebilirim. Yine Pamuk’un &lt;a href=&#34;https://www.kitapyurdu.com/kitap/kirmizi-sacli-kadin/386294.html&#34;&gt;“Kırmızı Saçlı Kadın”&lt;/a&gt; romanını da listenize ekleyin. &lt;a href=&#34;https://www.kitapyurdu.com/kitap/kendi-kendine-mba/390526.html&#34;&gt;“Kendi Kendine MBA”&lt;/a&gt; ve &lt;a href=&#34;https://www.kitapyurdu.com/kitap/akilli-yatirimci/452785.html&#34;&gt;“Akıllı Yatırımcı”&lt;/a&gt; ise baş ucu kitaplarım haline geldi.
Şu sıralar beğendiğim ve tamamladığım birkaç eğitim bulunuyor. Udemy’de yayınlanan eğitimler Akın Kaldıroğlu’na ait ve eğer ilginiz varsa bu konulara kesinlikle bu dersleri almalısınız.&lt;/p&gt;
&lt;p&gt;1- &lt;a href=&#34;https://www.udemy.com/course/temiz-kod/&#34;&gt;Clean Code (Temiz Kod)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2- &lt;a href=&#34;https://www.udemy.com/course/java-ile-nesne-merkezli-programlamaya-giris/&#34;&gt;Java ile Nesne-Merkezli Programlamaya Giriş&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3- &lt;a href=&#34;udemy.com/course/java-ile-nesne-merkezli-ve-fonksiyonel-programlama/&#34;&gt;Java ile Nesne-Merkezli ve Fonksiyonel Programlama&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;4- &lt;a href=&#34;https://www.udemy.com/course/designpatterns/&#34;&gt;Tasarım Kalıpları&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Yeniden görüşmek ve arayı açmamak dileğiyle.&lt;/p&gt;
&lt;p&gt;Soru, görüş ve önerilerinizi bu sayfaya yorum yapabilirsiniz. Bana erişmek için &lt;a href=&#34;mailto:volkanulutas@gmail.com&#34;&gt;volkanulutas@gmail.com&lt;/a&gt; adresini kullanabilirsiniz.&lt;/p&gt;
</description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/categories/g%C3%BCncelleme/">Güncelleme</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/tusa%C5%9F-tai-udemy-e%C4%9Fitimleri-java-spring/">TUSAŞ, TAI, Udemy Eğitimleri, Java, Spring</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>Hugo&#39;ya GoogleAdSense Reklam Alanı Ekleme (Tema Bağımsız)</title>
                <link>http://volkanulutas.com/posts/2020-07-31-hugo-google-adsence/</link>
                <guid isPermaLink="true">http://volkanulutas.com/posts/2020-07-31-hugo-google-adsence/</guid>
                <pubDate>Fri, 31 Jul 2020 00:00:00 &#43;0000</pubDate>
                
                    <author>volkanulutas@gmail.com (Volkan Ulutaş)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright>
                
                    <description>&lt;style&gt;
body {
    margin: 0px;
    padding: 0px;
}
table {
    margin-right: auto;
    margin-left: auto;
}
.image {

}
.caption p {
    margin-top: 0px;
}

&lt;/style&gt;
&lt;table&gt;
  &lt;tr&gt;
    &lt;td class=&#34;image&#34;&gt;&lt;img height=&#34;150&#34; width= =&#34;100&#34; src=&#34;http://volkanulutas.com/images/hugo-adsense/hugo.jpg&#34; &lt;/td&gt;
    &lt;td class=&#34;image&#34;&gt;&lt;img height=&#34;150&#34; width= =&#34;100&#34; src=&#34;http://volkanulutas.com/images/hugo-adsense/adsense.jpg&#34; &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;Merhabalar, bu yazımızda Hugo blogunuza tema özelliklerinde olmasa bile Google Adsense reklam alanı eklemeyi inceleyeceğiz.&lt;/p&gt;
&lt;p&gt;## 1.) Reklamın Gösterileceği Alanı Oluşturma:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[HUGO_HOME]/themes/[THEME_NAME]/layouts/partials/adsense-inarticle.html&lt;/strong&gt;
dizinde aşağıdaki kod parçacığını içeren içeriği oluşturunuz.&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;[HUGO_HOME] hugo blogunuzun kurulumunun yapıldığı dizindir.
[THEME_NAME] aktif olarak kullandığınız temanın bulunduğu dizindir.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;c&#34;&gt;&amp;lt;!-- in-article ad --&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ins&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;adsbygoogle&amp;#34;&lt;/span&gt;
     &lt;span class=&#34;na&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;display:block; text-align:center;&amp;#34;&lt;/span&gt;
     &lt;span class=&#34;na&#34;&gt;data-ad-layout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;in-article&amp;#34;&lt;/span&gt;
     &lt;span class=&#34;na&#34;&gt;data-ad-format&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;fluid&amp;#34;&lt;/span&gt;
     &lt;span class=&#34;na&#34;&gt;data-ad-client&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;{{.Site.Params.Adsense.client}}&amp;#34;&lt;/span&gt;
     &lt;span class=&#34;na&#34;&gt;data-ad-slot&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;{{.Site.Params.Adsense.inArticleSlot}}&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ins&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
     &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;adsbygoogle&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;adsbygoogle&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({});&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;script&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;2-google-adsense-hesabınızı-hugoya-bağlama&#34;&gt;2.) Google Adsense Hesabınızı Hugo&amp;rsquo;ya Bağlama:&lt;/h2&gt;
&lt;p&gt;Google Adsense hesabınızın bilgilerini (clientId ve SlodId) &lt;strong&gt;config.toml&lt;/strong&gt; genel ayar dosyanıza ekleyiniz.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;params&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;adsense&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;client&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ca-pub-12345&amp;#34;&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;inArticleSlot&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;12345&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;3-yazılarınıza-google-adsenseı-ekleme&#34;&gt;3.) Yazılarınıza Google Adsense&amp;rsquo;ı Ekleme:&lt;/h2&gt;
&lt;p&gt;Blog yazılarınız içerisinde &lt;strong&gt;&lt;!--adsense--&gt;&lt;/strong&gt; ifadesini kullanarak Google Adsense reklamlarını yazınıza dahil edebilirsiniz.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;Bu ilk paragraftır.

Bu ikinci paragraftır.

&lt;span class=&#34;c&#34;&gt;&amp;lt;!--adsense--&amp;gt;&lt;/span&gt;

Bu üçüncü paragraftır.
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;4---adsense---etiketinin-render-edilmesi&#34;&gt;4.) &lt;!--adsense--&gt; Etiketinin Render Edilmesi:&lt;/h2&gt;
&lt;p&gt;Eklediğimiz reklam etiketinin (&lt;!--adsense--&gt;) işletilmesi için &lt;strong&gt;[HUGO_HOME]/themes/[THEME_NAME]/layouts/_default/single.html&lt;/strong&gt; sayfasını açıp &lt;strong&gt;{{ .Content }}&lt;/strong&gt; etiketini aratınız. Bu alanı aşağıdaki kod parçacığı ile değiştiriniz.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;{{ replace .Content &amp;#34;&lt;span class=&#34;c&#34;&gt;&amp;lt;!--adsense--&amp;gt;&lt;/span&gt;&amp;#34; (partial &amp;#34;adsense-inarticle.html&amp;#34; .) | safeHTML }}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Bu şekilde blog yazılarımızın içerisine Google Adsense reklamlarımızı eklemiş olduk.&lt;/p&gt;
&lt;p&gt;Soru, görüş ve önerilerinizi bu sayfaya yorum yapabilirsiniz. Bana erişmek için &lt;a href=&#34;mailto:volkanulutas@gmail.com&#34;&gt;volkanulutas@gmail.com&lt;/a&gt; adresini kullanabilirsiniz.&lt;/p&gt;
</description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/categories/hugo/">Hugo</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/hugo/">Hugo</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>Hugo Blog&#39;unu Github&#39;da Yayınlamak</title>
                <link>http://volkanulutas.com/posts/2020-06-01-hugo-github/</link>
                <guid isPermaLink="true">http://volkanulutas.com/posts/2020-06-01-hugo-github/</guid>
                <pubDate>Mon, 01 Jun 2020 00:00:00 &#43;0000</pubDate>
                
                    <author>volkanulutas@gmail.com (Volkan Ulutaş)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright>
                
                    <description>&lt;p&gt;Merhabalar, bir önceki yazımızda Hugo&amp;rsquo;yu kendi bilgisayarımıza tasarlamayı incelemiştik (&lt;a href=&#34;http://volkanulutas.com/posts/2020-05-18-hugo-ile-blog-olusturmak/&#34;&gt;Hugo İle Blog Oluşturmak&lt;/a&gt;). Şimdi de bunu GithubPages üzerinden herhangi bir hosting&amp;rsquo;e ihtiyaç duymadan yayınlayacağız. Bunu yapmak için &amp;ldquo;new-blog&amp;rdquo; ve &amp;ldquo;username.github.io&amp;rdquo; (username alanı sizin github kullanıcı adınızdır) isminde iki depo (repository) aracılığıyla yöneteceğiz. Öncelikle bu depoları yaratmayı göreceğiz daha sonra &amp;ldquo;new-blog&amp;rdquo; deposunda Hugo kurulumunu yapacağız. Son adımda Hugo&amp;rsquo;nun ürettiği statik site yapısını &amp;ldquo;username.github.io&amp;rdquo; deposuna aktaracağız ve depoları Github&amp;rsquo;a &amp;ldquo;push&amp;rdquo; edeceğiz.&lt;/p&gt;
&lt;h2 id=&#34;1-gıthubda-depo-repository-yaratma&#34;&gt;1.) Gıthub&amp;rsquo;da Depo (repository) Yaratma:&lt;/h2&gt;
&lt;p&gt;İlk önce Github üzerinde iki &amp;ldquo;repository&amp;rdquo; oluşturalım. Bunu Github WEB sitesi üzerinden yapıyoruz. (&amp;ldquo;terminal&amp;rdquo; veya &amp;ldquo;konsol&amp;rdquo; üzerinden de yapılabilir.)&lt;/p&gt;
&lt;p&gt;Githup hesabınıza gittik sonra yeni bir &amp;ldquo;repository&amp;rdquo; yaratmalıyız. Bunu arayüzden yapabileceğimiz gibi &amp;ldquo;&lt;a href=&#34;https://github.com/new%22&#34;&gt;https://github.com/new&amp;quot;&lt;/a&gt; adresinden de erişebiliriz.&lt;/p&gt;
&lt;p&gt;Aşağıdaki ekran görüntüsünde gösterildiği gibi, new-blog isminde bir depo yaratıyoruz:
&lt;img src=&#34;http://volkanulutas.com/images/hugo-githubpages/1.png&#34; height=&#34;600&#34; width=&#34;800&#34;&gt;&lt;/p&gt;
&lt;p&gt;Aşağıdaki ekran görüntüsünde gösterildiği gibi, username.github.io isminde bir depo yaratıyoruz:
&lt;img src=&#34;http://volkanulutas.com/images/hugo-githubpages/2.png&#34; height=&#34;600&#34; width=&#34;800&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Benim Github hesabımda bu depo zaten yaratıldığı için böyle bir hata vermektedir, siz de böyle bir yoksa hata almayacaksınız.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;2-checkout-işlemleri&#34;&gt;2.) Checkout İşlemleri&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;2.1.) GithupPages Deposunu &amp;ldquo;checkout&amp;rdquo; Etme:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Checkout&amp;rsquo;u gerçekleştirdiğimiz dizine yazının devamında [BLOG_HOME] diyeceğiz.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Checkout&amp;rsquo;u gerçekleştireceğimiz dizine ([BLOG_HOME]) gidelim.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;https://github.com/username/username.github.io
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;2.2.) Blog Deposunu &amp;ldquo;Check-out&amp;rdquo; Etme&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;[github-username].github.io &amp;ldquo;repository&amp;quot;sini &amp;ldquo;clone&amp;rdquo; komutu ile &amp;ldquo;check-out&amp;rdquo; edip, lokal bilgisayarımıza alalım:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;https://github.com/username/new-blog
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Bu işlemlerden sonra [BLOG_HOME] dizininde &amp;ldquo;username.github.io&amp;rdquo; ve &amp;ldquo;new-blog&amp;rdquo; isminde iki klasör oluşturmuş olduk.&lt;/p&gt;
&lt;h2 id=&#34;4-hugo-kurulumunu-yapalım&#34;&gt;4.) Hugo Kurulumunu Yapalım&lt;/h2&gt;
&lt;p&gt;[BLOG_HOME]/new-blog dizinine gidip daha önceki blog yazımızda incelediğimiz adımları gerçekleştirlelim. Yazıya *&lt;a href=&#34;http://volkanulutas.com/posts/2020-05-18-hugo-ile-blog-olusturmak/&#34;&gt;buradan&lt;/a&gt;*ulaşabilirsiniz.&lt;/p&gt;
&lt;p&gt;Bu adımları yaptıktan sonra en önemli nokta hugo ile oluşturduğumuz içeriğin GithupPages (username.github.io) deposuna aktarılmasıdır. Bunun için aşağıdaki komutu [BLOG_HOME]/new-blog dizininde çalıştıralım:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.1.) Hugo Blog&amp;rsquo;unu Belli Dizinde OLuşturma:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;hugo -d ../username.github.io
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Bu komut ile &amp;ldquo;-d&amp;rdquo; parametresiyle GithupPages (username.github.io)için &amp;ldquo;checkout&amp;rdquo; ettiğimiz dizini vermiş olduk. Bu yazımızda üst dizinde bulunduğu için &amp;ldquo;../&amp;rdquo; komutu kullanılmıştır.&lt;/p&gt;
&lt;h2 id=&#34;5-depoları-push-etme&#34;&gt;5.) Depoları &amp;ldquo;Push&amp;rdquo; Etme:&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;5.1.) GithupPages Deposu:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Öncelikle [BLOG_HOME] dizinine gidelim ve daha sonra aşağıdaki komutları çalıştıralım.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; username.github.io

git add .
git commit -m &lt;span class=&#34;s1&#34;&gt;&amp;#39;initial&amp;#39;&lt;/span&gt;
git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;5.2.) new-blog Deposu:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;git add . 
git commit -m &lt;span class=&#34;s1&#34;&gt;&amp;#39;initial&amp;#39;&lt;/span&gt;
git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Bu şekilde oluşturmuş olduğumuz blogu &amp;ldquo;&lt;a href=&#34;https://username.github.io&#34;&gt;https://username.github.io&lt;/a&gt;&amp;rdquo; adresinde yayınlamış olduk. &amp;ldquo;[BLOG_HOME]/content/posts&amp;rdquo; dizininde herhangi bir &amp;ldquo;md&amp;rdquo; uzantılı yazı oluşturduğumuzda, bu blogumuzda yer alacaktır. Daha sonra yayına almak için &lt;strong&gt;4.1.)&lt;/strong&gt; ve &lt;strong&gt;5.)&lt;/strong&gt; adımlarını tekrar etmeliyiz.&lt;/p&gt;
&lt;p&gt;Bir sonraki yazımızda GithubPages ile alanadı bağlamayı inceleyeceğiz ve bu sayede &amp;ldquo;&lt;a href=&#34;http://volkanulutas.com&#34;&gt;http://volkanulutas.com&lt;/a&gt;&amp;rdquo; gibi bir alanadı üzerinden blogumuza erişim sağlamış olacağız.&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Not 1: Blog yazılarınızı &amp;ldquo;md&amp;rdquo; dilinde yazabilirsiniz. Çok kolay bir &amp;ldquo;markup language&amp;rdquo; olarak sınıflandırabiliriz. Hızlıca öğrenmek için bu &amp;ldquo;tutorial&amp;rdquo; &lt;a href=&#34;https://www.markdowntutorial.com/&#34;&gt;buradan&lt;/a&gt; göz atabilirsiniz. Ek olarak Github&amp;rsquo;ın &amp;ldquo;tutorial&amp;quot;ına da &lt;a href=&#34;https://guides.github.com/features/mastering-markdown/&#34;&gt;buradan&lt;/a&gt; erişebilirsiniz.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Not 2: &amp;ldquo;Repository&amp;rdquo; kelimesi Türkçeye depo olarak çevirilmiştir. Kullanılan yabancı kelimeler için Türkçe kelime tavsiyelerini bana e-posta üzerinden iletebilirsiniz.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Kaynaklar&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://help.github.com/en/github/getting-started-with-github/create-a-repo&#34;&gt;Github Help - Creating a Repo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://guides.github.com/features/mastering-markdown/&#34;&gt;Githup MD Guide&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://guides.github.com/features/mastering-markdown/&#34;&gt;markdowntutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Bu şekilde kurulumu tamamlanmış olduk. Soru, görüş ve önerilerinizi bu sayfaya yorum yapabilirsiniz. Bana erişmek için &lt;a href=&#34;mailto:volkanulutas@gmail.com&#34;&gt;volkanulutas@gmail.com&lt;/a&gt; adresini kullanabilirsiniz.&lt;/p&gt;
</description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/categories/hugo/">Hugo</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/hugo/">Hugo</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>React Native Navigation (StackNavigation ve TabNavigation)</title>
                <link>http://volkanulutas.com/posts/2020-05-24-react-native-navigation/</link>
                <guid isPermaLink="true">http://volkanulutas.com/posts/2020-05-24-react-native-navigation/</guid>
                <pubDate>Sun, 24 May 2020 00:00:00 &#43;0000</pubDate>
                
                    <author>volkanulutas@gmail.com (Volkan Ulutaş)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright>
                
                    <description>&lt;img src=&#34;http://volkanulutas.com/images/react-native-navigation/react-native.png&#34; height=&#34;300&#34; width=&#34;600&#34;&gt;
&lt;p&gt;Merhabalar, bu yazımızda React-Native menü ve sayfalar arası geçişleri inceleyeceğiz.&lt;/p&gt;
&lt;h2 id=&#34;1-react-natıve-kurulumu&#34;&gt;1.) React Natıve Kurulumu&lt;/h2&gt;
&lt;p&gt;React-Native&amp;rsquo;ın kurulumu ile ilgili çok güzel anlatımlar mevcut bunların linkine aşağıdan ulaşabilirsiniz, daha sonra bu kurulumlarla ilgili ben de bu blog&amp;rsquo;da paylaşımda bulunacağım.&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Kurulum Bağlantıları:
&lt;em&gt;&lt;a href=&#34;https://medium.com/mol42/windows-%C3%BCzerinde-react-native-kurulumu-4de15e0e33b9&#34;&gt;Windows&lt;/a&gt;&lt;/em&gt; , &lt;em&gt;&lt;a href=&#34;https://medium.com/mol42/macos-%C3%BCzerinde-react-native-kurulumu-71d4f96c282e&#34;&gt;MacOS&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;&lt;a href=&#34;https://medium.com/mol42/linux-%C3%BCzerinde-react-native-kurulumu-a61b54927941&#34;&gt;Linux&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;11-editor-seçimi-ve-kurulum&#34;&gt;1.1.) Editor Seçimi ve Kurulum&lt;/h2&gt;
&lt;p&gt;React-Native geliştirmesi için bir editör kullanmamız işimizi çok kolaylaştıracaktır. Benim tercihimi Visual Studio Code&amp;rsquo;dan yana kullandım, &lt;em&gt;&lt;a href=&#34;https://code.visualstudio.com/download&#34;&gt;buradan&lt;/a&gt;&lt;/em&gt; indirme işlemini yapabilirsiniz.&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://code.visualstudio.com/download&#34;&gt;Visual Studio Code İndirme Bağlantısı&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;2-react-natıve-projesinin-başlatılması&#34;&gt;2.) React-Natıve Projesinin Başlatılması:&lt;/h2&gt;
&lt;p&gt;Kurumları bu adıma geldiğimizde tamamlamış olduğunuzu varsayıyorum. Şimdi yeni bir React-Native uygulamasını aşağıdaki komut ile başlatalım:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;react-native init ReactNativeNavigationSample 
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;React-Native uygulamarını varsayılan olarak JavaScript kullanarak geliştirmek mümkün; ancak Typescript gibi bir dilinde avantajlarından yararlanabilmek için aşağıdaki komut ile projeyi başlatmak daha uygun olacaktır. Typescript şablonu seçilerek başlatılmayan bir projeyi daha sonradan Typescript ile yazacak hala getirebiliriz; ancak bu süreç zor olduğu için başlanğıçta aktifleştirmek daha doğru olacaktır.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;react-native init ReactNativeNavigationSample --template typescript 
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Kurulumu doğrulamak için projeyi çalıştıralım:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ReactNativeNavigationSample

react-native run-ios
react-native run-android
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Kurulum doğru olarak yapılandırılmış ise, emulator veya bağlı olan cihazda aşağıdaki ekran görüntüsü oluşmaktadır.&lt;/p&gt;
&lt;img src=&#34;http://volkanulutas.com/images/react-native-navigation/2.png&#34; height=&#34;600&#34; width=&#34;600&#34;&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Bu aşamada aşağıdaki ekran görüntüsünde gibi bir hata alırsanız, proje ana dizininde /template/package.json dosyasını siliniz.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&#34;http://volkanulutas.com/images/react-native-navigation/1.png&#34; alt=&#34;metin&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;img src=&#34;http://volkanulutas.com/images/react-native-navigation/github.jpg&#34; height=&#34;150&#34; width=&#34;300&#34; /&gt; 
&lt;p&gt;Bu aşamaya kadar kodumuzu &lt;em&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/volkanulutas/blog-tutorials/tree/ebfec43487241bac1314de81ea3121f2a6c43f9e&#34;&gt;buradan&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt; inceleyebilirsiniz.&lt;/p&gt;
&lt;h2 id=&#34;3-react-natıve-navıgatıon-kütüphanesinin-kurulumu&#34;&gt;3.) react-natıve-navıgatıon Kütüphanesinin Kurulumu:&lt;/h2&gt;
&lt;p&gt;Ana dizine gidelim.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ReactNativeNavigationSample
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Daha sonra &amp;ldquo;navigation&amp;rdquo; için gerekli kütüphanelerin kurulumuna başlayalım. Kurulum için &amp;ldquo;npm&amp;rdquo; veya &amp;ldquo;yarn&amp;rdquo; paket yöneticilerini kullanabilirsiniz.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.1.)&lt;/strong&gt; Navigation kütüphanesinin ve bağlılıklarının (dependency) kurulumunu yapalım.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;yarn add @react-navigation/native
yarn add @react-navigation/stack
yarn add @react-navigation/bottom-tabs
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;veya&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;npm install @react-navigation/native
npm install @react-navigation/stack
npm install @react-navigation/bottom-tabs
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;3.2.)&lt;/strong&gt; Navigation için gerekli bağımlılıkları kuralım:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;yarn add react-native-reanimated react-native-gesture-handler react-native-screens react-native-safe-area-context @react-native-community/masked-view
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;veya&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;npm install react-native-reanimated react-native-gesture-handler react-native-screens react-native-safe-area-context @react-native-community/masked-view
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;3.3.)&lt;/strong&gt; Gesture Handler kütüphanesini kuralım:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;yarn add react-native-gesture-handler
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;veya&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;npm install react-native-gesture-handler
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;3.4.)&lt;/strong&gt; Daha sonra IOS için gerekli olan &amp;ldquo;pod&amp;rdquo; kurulumunu yapalım. Bu işlemi yeni bir kütüphane kurulumunun ardından tekrarlamanızı öneririm.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ios
pod install
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ..
react-native link
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;3.5.)&lt;/strong&gt; Navigation için gerekli bağımlılıkları kurduk. Şimdi tasarıma başlamadan önce projeyi emulator veya telefonda çalıştıralım:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;react-native run-ios
react-native run-android
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;4-react-native-navigation-kütüphanesinin-kullanımı&#34;&gt;4.) react-native-navigation Kütüphanesinin Kullanımı:&lt;/h2&gt;
&lt;p&gt;Kurulum tamamlandıktan sonra ana dizinde &amp;ldquo;src&amp;rdquo; adında bir klasör oluşturalım. &amp;ldquo;src&amp;rdquo; klasörünün altında &amp;ldquo;containers&amp;rdquo; ve &amp;ldquo;navigation&amp;rdquo; isimlerinde klasörler oluşturalım. &amp;ldquo;container&amp;rdquo; klasörünün altında yapacağımız ekranları konumlandıracağız. &amp;ldquo;navigation&amp;rdquo; klasöründe ise &amp;ldquo;stack&amp;rdquo; ve &amp;ldquo;tab&amp;rdquo; navigation kullanımlarını inceleyeceğiz.&lt;/p&gt;
&lt;h2 id=&#34;41-ekranların-tasarlanması&#34;&gt;4.1.) Ekranların Tasarlanması:&lt;/h2&gt;
&lt;p&gt;Uygulamamızda 4 adet ana ekran (Mesajlar, Bildirimler, Profil ve Ayarlar) bulunmaktadır ve bunları &amp;ldquo;tab navigation&amp;rdquo; içerisinde tasarlayıp geçiş sağlayacağız. Somutlaştırmak amacıyla ekranın amaçlarını da inceleyelim:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Mesajlar Ekranı: Bu ekran aracılığıyla kullanıcı, diğer kullanıcılarla mesajlaşabilmektedir.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Profil Ekranı: Kullanıcının profil bilgilerini görüntüleyip, değiştirebileceği ekrandır.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bildirimler Ekranı: Uygulama içinde verilen bilgilendirme mesajlarının görüntülendiği ekrandır.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ayarlar Ekranı: Kullanıcının uygulama ile ilgili tercihlerini gözlemleyip, değiştirebileceği ekrandır.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bu ekranları fonksiyonel olarak kodlamayacağız, amacımız &amp;ldquo;navigation&amp;rdquo; yapısını incelemek olacaktır.&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Projenin Visual Studio Code İle Açılması:&lt;/strong&gt;
Visual Studio Code açılır. Daha sonra &amp;ldquo;File/Open&amp;rdquo; menüsünden projeyi oluşturduğumuz ana dizin seçilir.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;411-ana-dosya-dizinlerinin-oluşturulması&#34;&gt;4.1.1.) Ana Dosya Dizinlerinin Oluşturulması:&lt;/h2&gt;
&lt;p&gt;Yaygın yaklaşım olarak kodlarımızı &amp;ldquo;src&amp;rdquo; isminde ana bir dizinin altında konumlandırıyoruz. &amp;ldquo;src&amp;rdquo; klasörünün altında;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;container: Ekranlarımızı konumlandıracağız.&lt;/li&gt;
&lt;li&gt;navigation: tab ve stack navigation yapılarımızı &amp;ldquo;component&amp;rdquo; olarak oluşturup kullanacağız.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;ldquo;container&amp;rdquo; klasörünün altında &amp;ldquo;message&amp;rdquo;, &amp;ldquo;notification&amp;rdquo;, &amp;ldquo;profile&amp;rdquo; ve &amp;ldquo;setting&amp;rdquo; isimlerinde klasörler oluşturalım ve ekranlarımızı bu klasörler üzerinden yönetelim.&lt;/p&gt;
&lt;h2 id=&#34;412-mesaj-ekranı-messagescreentsx&#34;&gt;4.1.2.) Mesaj Ekranı (MessageScreen.tsx)&lt;/h2&gt;
&lt;p&gt;Daha sonra tüm bu ekranların altında aşağıdaki .tsx (.js de olabilir) dosyalarını oluşturalım. Örneğin aşağıdaki &amp;ldquo;MessageScreen.tsx&amp;rdquo; dosyasını &amp;ldquo;src/container/message&amp;rdquo; klasörünü Visual Studio Code üzerinden seçerek &amp;ldquo;New File&amp;rdquo; diyelim ve &amp;ldquo;MessageScreen.tsx&amp;rdquo; ismini verelim. Boş olarak oluşmuş dosyanın içerisine aşağıdaki kod parçacığını yapıştıralım.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;React&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;View&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Button&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react-native&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;MessageScreen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;navigation&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;View&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;flex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;alignItems&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;justifyContent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Message&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Screen&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/Text&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Button&lt;/span&gt;
          &lt;span class=&#34;nx&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Go to Details&amp;#34;&lt;/span&gt;
          &lt;span class=&#34;nx&#34;&gt;onPress&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;navigation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;navigate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Details&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)}&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/View&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;MessageScreen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Şimdi ekranımızı kod parçaları halinde inceleyelim:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;React&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;View&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Button&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react-native&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Burada kütüphanelerimizi ilgili ekranımıza ekliyoruz. React kütüphanesini ekranımızı dahil ettik ve &amp;ldquo;react-native&amp;rdquo; kütüphanesinden &amp;ldquo;View&amp;rdquo;, &amp;ldquo;Text&amp;rdquo; ve &amp;ldquo;Button&amp;rdquo; elemanlarını kullanacağımızı belirtmiş oluk.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;MessageScreen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;navigation&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&amp;ldquo;React&amp;rdquo; kütüphanesini kullanacağımızı belirtmiştik, her React sınıfında &amp;ldquo;return&amp;rdquo; adında bir fonksiyonla dönüş yaparız. Burada tasarımımızı tanımlar ve dönüşünü sağlarız.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;View&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;flex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;alignItems&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;justifyContent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Bu kod parçacığında View tanımlıyoruz. View aslında bir container gibi elemanlarımızı derli toplu tutmamıza ve ortak stiller vermemizi sağlar. View&amp;rsquo;a stil veriyoruz ve &amp;ldquo;flex:1&amp;rdquo; diyerek tüm ekranı kapsamasını belirtiyoruz. &amp;ldquo;alignItems: &amp;lsquo;center&amp;rsquo;, justifyContent: &amp;lsquo;center&amp;rsquo;&amp;rdquo; diyerek içerikleri ortalamış olduk. Bundan sonra View&amp;rsquo;ın altında yer alan herhangi bir eleman için bu stil kuralları geçerli olacaktır.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Button&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Go to Details&amp;#34;&lt;/span&gt;
         &lt;span class=&#34;nx&#34;&gt;onPress&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;navigation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;navigate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Details&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Bu kod parçacığında bir buton tanımladık ve butona tıklandığında ne yapacağını bir fonksiyon olarak vermiş olduk. Burada butona tıklandığında &amp;ldquo;Details&amp;rdquo; isminde bir ekranın açılmasını tetiklemiş olacağız.&lt;/p&gt;
&lt;p&gt;Şimdi diğer ekranlarımızı tasarlayalım.&lt;/p&gt;
&lt;h2 id=&#34;413-bildirim-ekranı-notıfıcatıonscreentsx&#34;&gt;4.1.3.) Bildirim Ekranı (NotıfıcatıonScreen.tsx)&lt;/h2&gt;
&lt;p&gt;Diğer ekranlarımızda MessageScreen ekranına benzer şekilde projemize dahil edelim. Visual Studio Code&amp;rsquo;da &amp;ldquo;src/container/notification&amp;rdquo; klasörünü seçerek, &amp;ldquo;New File&amp;rdquo; diyelim ve &amp;ldquo;NotificationScreen.tsx&amp;rdquo; ismiyle adlandıralım. Daha sonra aşağıdaki kodu bu dosyaya yapıştıralım.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;React&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;View&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Button&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react-native&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;NotificationScreen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;navigation&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;View&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;flex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;alignItems&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;justifyContent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Notification&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Screen&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/Text&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Button&lt;/span&gt;
          &lt;span class=&#34;nx&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Go to Details&amp;#34;&lt;/span&gt;
          &lt;span class=&#34;nx&#34;&gt;onPress&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;navigation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;navigate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Details&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)}&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/View&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;NotificationScreen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;414-profil-ekranı-profılescreentsx&#34;&gt;4.1.4.) Profil Ekranı (ProfıleScreen.tsx)&lt;/h2&gt;
&lt;p&gt;Visual Studio Code&amp;rsquo;da &amp;ldquo;src/container/profile&amp;rdquo; klasörünü seçerek, &amp;ldquo;New File&amp;rdquo; diyelim ve &amp;ldquo;ProfileScreen.tsx&amp;rdquo; ismiyle adlandıralım. Daha sonra aşağıdaki kodu bu dosyaya yapıştıralım.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;React&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;View&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Button&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react-native&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ProfileScreen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;navigation&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;View&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;flex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;alignItems&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;justifyContent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Profile&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Screen&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/Text&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Button&lt;/span&gt;
          &lt;span class=&#34;nx&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Go to Details&amp;#34;&lt;/span&gt;
          &lt;span class=&#34;nx&#34;&gt;onPress&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;navigation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;navigate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Details&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)}&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/View&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ProfileScreen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;415-ayarlar-ekranı-settingscreentsx&#34;&gt;4.1.5.) Ayarlar Ekranı (SettingScreen.tsx)&lt;/h2&gt;
&lt;p&gt;Visual Studio Code&amp;rsquo;da &amp;ldquo;src/container/setting&amp;rdquo; klasörünü seçerek, &amp;ldquo;New File&amp;rdquo; diyelim ve &amp;ldquo;SettingScreen.tsx&amp;rdquo; ismiyle adlandıralım. Daha sonra aşağıdaki kodu bu dosyaya yapıştıralım.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;React&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;View&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Button&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react-native&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;SettingScreen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;navigation&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;View&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;flex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;alignItems&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;justifyContent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Settings&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Screen&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/Text&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Button&lt;/span&gt;
          &lt;span class=&#34;nx&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Go to Details&amp;#34;&lt;/span&gt;
          &lt;span class=&#34;nx&#34;&gt;onPress&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;navigation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;navigate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Details&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)}&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/View&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;SettingScreen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;416-detay-ekranı-detailstsx&#34;&gt;4.1.6.) Detay Ekranı (Details.tsx)&lt;/h2&gt;
&lt;p&gt;Detay ekranı, tasarlanan tüm diğer ekranların &amp;ldquo;buton&amp;rdquo; elemanının &amp;ldquo;onClick()&amp;rdquo; metodunda kullanılmıştır ve &amp;ldquo;StackNavigation&amp;rdquo; kullanımını örneklendirmek için kullanılmıştır.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;React&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;View&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Button&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react-native&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Details&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;navigation&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;View&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;flex&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;alignItems&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;justifyContent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Details&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Screen2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/Text&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Button&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Go to Home&amp;#34;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;onPress&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;navigation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;navigate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;Home&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Button&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Go back&amp;#34;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;onPress&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;navigation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;goBack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Button&lt;/span&gt;
          &lt;span class=&#34;nx&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Go back to first screen in stack&amp;#34;&lt;/span&gt;
          &lt;span class=&#34;nx&#34;&gt;onPress&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;navigation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;popToTop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()}&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/View&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
  
  &lt;span class=&#34;kr&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Details&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;5-navıgationın-ayarlanması&#34;&gt;5.) Navıgation&amp;rsquo;ın Ayarlanması:&lt;/h2&gt;
&lt;h2 id=&#34;51-stacknavıgatıontsx&#34;&gt;5.1.) StackNavıgatıon.tsx&lt;/h2&gt;
&lt;p&gt;Dosya dizininden &amp;ldquo;src/navigation&amp;rdquo; klasörünün altına gelip yeni bir .tsx uzantılı (veya .js) &amp;ldquo;StackNavigation.tsx&amp;rdquo; isminde bir dosya oluşturunuz. Benzer şekilde Visual Studio code içerisinden &amp;ldquo;src/navigation&amp;rdquo; klasörünü seçerek &amp;ldquo;New File&amp;rdquo; seçeneğinde &amp;ldquo;StackNavigation.tsx&amp;rdquo; yazarak dosyayı oluşturalım. Dosyayı oluşturduktan sonra aşağıdaki kod parçacığını dosyaya yapıştırınız.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;React&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;createStackNavigator&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;@react-navigation/stack&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;TabNavigation&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;../navigation/TabNavigation&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DetailsScreen&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;../container/Details&amp;#34;&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Stack&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;createStackNavigator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;StackNavigaiton&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Navigator&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;initialRouteName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Home&amp;#34;&lt;/span&gt; 
        &lt;span class=&#34;nx&#34;&gt;screenOptions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt;
          &lt;span class=&#34;nx&#34;&gt;headerStyle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;backgroundColor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;#4CB6ED&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
          &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
          &lt;span class=&#34;nx&#34;&gt;headerTintColor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;#fff&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
          &lt;span class=&#34;nx&#34;&gt;headerTitleStyle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;fontWeight&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;bold&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
          &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Screen&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Home&amp;#34;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;component&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;TabNavigation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Screen&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Details&amp;#34;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;component&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DetailsScreen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Detaylar&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}}&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/Stack.Navigator&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;kr&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;StackNavigaiton&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;StackNavigation yapısını, WEB tarayıcınızda olduğu gibi gidilen bir sitedeki &amp;ldquo;Geri/İleri&amp;rdquo; butonlarına bahsedebiliriz. Site içerisinde tıkladığınız her bağlantı sonrasında &amp;ldquo;Geri&amp;rdquo; butonuyla bir önceki sayfaya gidilebilir. &amp;ldquo;StackNavigation&amp;quot;de aynı şekilde bir sayfadan diğerine gittiğimizde &amp;ldquo;Geri&amp;rdquo; butonuyla bir önceki ekrana geçişimizi sağlar. Genellikle detay ekranlarında kullanılır. Bizim projemizden örnek verecek olursak, &amp;ldquo;Mesajlar&amp;rdquo; ekranında arkadaş listenizin gösterildiğini düşünelim, herhangi bir arkdaşınızın ismine tıklandığında açılan &amp;ldquo;Mesajlaşma&amp;rdquo; ekranı &amp;ldquo;detay&amp;rdquo; ekranı olarak düşünülebilir. Yine &amp;ldquo;Geri&amp;rdquo; butonuyla arkadaş listenize gelebileceksiniz.&lt;/p&gt;
&lt;p&gt;Burada &amp;ldquo;import&amp;quot;larımızı yapıyoruz. Detay ekranımızı &amp;ldquo;stack&amp;rdquo; yapısında kullacağız. Ana ekranımız  &amp;ldquo;TabNavigation&amp;rdquo; olacaktır. Detay ekranımız ise &amp;ldquo;Details&amp;rdquo; sınıfı olacaktır ve TabNavigation içerinde yer alan sınıfların (MessageScreen.tsx, ProfileScreen.tsx gibi) onClick metodunda &amp;ldquo;Details&amp;rdquo; ekranını açıyoruz. &amp;ldquo;StackNavigation&amp;quot;a eklediğimiz &amp;ldquo;Details&amp;rdquo; sınıfı sayesinde &amp;ldquo;Geri&amp;rdquo; kontrolünü oluşturmuş olduk.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;TabNavigation&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;../navigation/TabNavigation&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;DetailsScreen&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;../container/Details&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Burada bir diğer önemli kod parçacığı aşağıdaki gibidir. &amp;ldquo;Stack.Navigator&amp;quot;a bu şekilde stil vermiş oluyoruz.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;nx&#34;&gt;creenOptions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt;
          &lt;span class=&#34;nx&#34;&gt;headerStyle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;backgroundColor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;#4CB6ED&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
          &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
          &lt;span class=&#34;nx&#34;&gt;headerTintColor&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;#fff&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
          &lt;span class=&#34;nx&#34;&gt;headerTitleStyle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;nx&#34;&gt;fontWeight&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;bold&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
          &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;52-tabnavıgationtsx&#34;&gt;5.2.) TabNavıgation.tsx&lt;/h2&gt;
&lt;p&gt;Dosya dizininden &amp;ldquo;src/navigation&amp;rdquo; klasörünün altına gelip yeni bir .tsx uzantılı (veya .js) &amp;ldquo;TabNavigation.tsx&amp;rdquo; isminde bir dosya oluşturunuz. Benzer şekilde Visual Studio code içerisinden &amp;ldquo;src/navigation&amp;rdquo; klasörünü seçerek &amp;ldquo;New File&amp;rdquo; seçeneğinde &amp;ldquo;TabNavigation.tsx&amp;rdquo; yazarak dosyayı oluşturalım. Dosyayı oluşturduktan sonra aşağıdaki kod parçacığını dosyaya yapıştırınız.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;React&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;View&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Button&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Image&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react-native&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;createBottomTabNavigator&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;@react-navigation/bottom-tabs&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;MessageScreen&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;../container/message/MessageScreen&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;NotificationScreen&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;../container/notification/NotificationScreen&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ProfileScreen&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;../container/profile/ProfileScreen&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;SettingScreen&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;../container/setting/SettingScreen&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Tab&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;createBottomTabNavigator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;TabNavigation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Tab&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Navigator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Tab&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Screen&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Mesajlar&amp;#34;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;component&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;MessageScreen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Tab&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Screen&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Bildirimler&amp;#34;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;component&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;NotificationScreen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Tab&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Screen&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Profil&amp;#34;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;component&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ProfileScreen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Tab&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Screen&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Ayarlar&amp;#34;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;component&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;SettingScreen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/Tab.Navigator&amp;gt;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;kr&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;TabNavigation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;TabNavigation.tsx sınıfını açıklayalım. Öncelikle kullanacağımız ekranları import ediyoruz. Bulunduğumuz dizinin bir üst dizininde &amp;ldquo;container&amp;rdquo; klasörü bulunuyor. Buna erişmek için &amp;ldquo;../&amp;rdquo; ibaresini kullanıyoruz. Örneğin &amp;ldquo;Bildirimler&amp;rdquo; ekranını aşağıdaki gibi eklemiş olduk:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;NotificationScreen&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;../containers/notification/NotificationScreen&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Burada daha önce görmediğimiz &amp;ldquo;navigation&amp;rdquo; için gerekli olan bir bağlılığı daha bu sınıfımıza aşağıdaki gibi ekliyoruz:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;createBottomTabNavigator&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;@react-navigation/bottom-tabs&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Daha sonra global olarak aşağıdaki kod ile TabNavigation&amp;rsquo;ı yaratıyoruz.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Tab&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;createBottomTabNavigator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;return fonksiyonu içinde o sınıfta yaptığımız tasarımı döndüğümüzü belirtmiştik, şimdi burada da navigation tasarımızı aşağıdaki gibi tasarlayıp dönüyoruz. Tab.Screen alanının &amp;ldquo;name&amp;rdquo; alanında ilgili &amp;ldquo;tab&amp;quot;ımızın görünen adını vermiş oluyoruz, &amp;ldquo;component&amp;rdquo; olarak ise import ettiğimiz ekranlardan hangisinin tıklandığında gidileceğini belirtmiş olduk.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;TabNavigation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Tab&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Navigator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Tab&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Screen&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Mesajlar&amp;#34;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;component&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;MessageScreen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;6-apptsx&#34;&gt;6.) App.tsx&lt;/h2&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Ana dizinde yani &amp;ldquo;src&amp;rdquo; dizininin üzerinde &lt;strong&gt;&amp;ldquo;App.js&amp;rdquo;&lt;/strong&gt; isminde bir sınıf bulunmaktadır. Bu sınınfın adını &lt;strong&gt;&amp;ldquo;App.tsx&amp;rdquo;&lt;/strong&gt; olarak değiştirelim. &amp;ldquo;App.tsx&amp;rdquo; veya &amp;ldquo;App.js&amp;rdquo; uygulamamız ilk açıldığında gösterilecek olan sınıftır. Kod incelemeye buradan başlamak doğru olacaktır, giriş noktasıdır. Kod parçacığını incelediğimizde&amp;rdquo; &amp;ldquo;&lt;NavigationContainer /&gt;&amp;rdquo; ile anasayfamızda bir navigation topluluğu kullanabileceğimizi belirtmiş olduk. Daha sonra önceden tasarlamış olduğumuz &amp;ldquo;&lt;StackNavigatinon&gt;&amp;rdquo; &amp;ldquo;component&amp;quot;imizi &amp;ldquo;container&amp;rdquo; içinde konumlandırıyoruz. Ek olarak &amp;ldquo;StackNavigation&amp;rdquo; sınıfını da import ettik.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;React&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;NavigationContainer&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;@react-navigation/native&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;StackNavigation&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;./src/navigation/StackNavigation&amp;#39;&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;App&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;React$Node&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;NavigationContainer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;StackNavigation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/NavigationContainer&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;App&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Son olarak projemizi tamamladığımızda emülatörlerde aşağıdaki gibi projemizi oluşturmuş olduk.&lt;/p&gt;
&lt;img src=&#34;http://volkanulutas.com/images/react-native-navigation/3.png&#34; height=&#34;600&#34; width=&#34;600&#34;&gt;
&lt;img src=&#34;http://volkanulutas.com/images/react-native-navigation/4.png&#34; height=&#34;600&#34; width=&#34;600&#34;&gt;
&lt;h2 id=&#34;71-projeye-gıthub-üzerinden-erişim-ve-çalıştırma&#34;&gt;7.1.) Projeye Gıthub Üzerinden Erişim ve Çalıştırma:&lt;/h2&gt;
&lt;img src=&#34;http://volkanulutas.com/images/react-native-navigation/github.jpg&#34; height=&#34;150&#34; width=&#34;300&#34;&gt;
&lt;p&gt;Projenin son halini ***&lt;a href=&#34;https://github.com/volkanulutas/blog-tutorials/tree/master/ReactNativeNavigationSample&#34;&gt;buradan&lt;/a&gt;***inceleyebilirsiniz.&lt;/p&gt;
&lt;p&gt;Github üzerinden &amp;ldquo;fork&amp;quot;layarak veya &amp;ldquo;clone&amp;rdquo; ederek eriştiğiniz kodu aşağıdaki komutlar derleyip, çalıştırabilirsiniz. Öncelikle projeyi indirdiğiniz dizine gidiniz.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;npm install
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Makalemizde anlatılan 2. kısmı tekrarlanıyız, daha sonra aşağıdaki komutları çalıştırınız.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ios
install pods
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ..
react-native run-android
react-native run-ios
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Bu şekilde kurulumu tamamlanmış olduk. Soru, görüş ve önerilerinizi bu sayfaya yorum yapabilirsiniz. Bana erişmek için &lt;a href=&#34;mailto:volkanulutas@gmail.com&#34;&gt;volkanulutas@gmail.com&lt;/a&gt; adresini kullanabilirsiniz.&lt;/p&gt;
</description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/categories/react-native/">React Native</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/react-native/">react-native</category>
                                
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/react-native-navigation/">react-native-navigation</category>
                                
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/stack-navigation/">stack navigation</category>
                                
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/tab-navigation/">tab navigation</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>Hugo İle Blog Oluşturmak</title>
                <link>http://volkanulutas.com/posts/2020-05-18-hugo-ile-blog-olusturmak/</link>
                <guid isPermaLink="true">http://volkanulutas.com/posts/2020-05-18-hugo-ile-blog-olusturmak/</guid>
                <pubDate>Mon, 18 May 2020 00:00:00 &#43;0000</pubDate>
                
                    <author>volkanulutas@gmail.com (Volkan Ulutaş)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright>
                
                    <description>&lt;p&gt;Merhabalar, bu yazımızda Hugo ile blog oluşturma konusuna değineceğiz, üç işletim sistemi içinde çalışan bir kurulum yazmayı hedefledim. Bir sonraki yazımızda da, lokal makinemizde oluşturduğumuz blogumuzu GithubPages üzerinden yayınlayacağız, böylelikle bir barındırma (hosting) gereksinimine de ihtiyaç duymayacağız.&lt;/p&gt;
&lt;h2 id=&#34;hugo-nedir&#34;&gt;Hugo Nedir?&lt;/h2&gt;
&lt;p&gt;Hugo, Go dili ile yazılmış bir statik site oluşturucu çatı olarak tanımlanabilir. Go dili ile yazıldığı için göreceli olarak diğer sistemlere göre hızlı bir çözüm sunmaktadır. HTML ve CSS desteği ile hiç Go dili bilmeden sitenizi değiştirerek oluşturabilir veya birçok tema seçeneğinden biriyle sitenizi yayına alabilirsiniz. Git gibi bir sistem ile aşınaysanız, blog yazımını kolaştıracak ve &amp;ldquo;md&amp;rdquo; diliyle (GitHub README dosyalarında olduğu gibi) hızla yazılarınızı oluşturabileceksiniz.&lt;/p&gt;
&lt;h2 id=&#34;ön-yüklemeler&#34;&gt;Ön Yüklemeler&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;MacOS:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Brew Kurulumu:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Homebrew Apple&amp;rsquo;ın ihtiyaç duymadığı ama size lazım olabilecek paketleri kurmanızı sağlar.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;ruby -e &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Windows:&lt;/strong&gt;
&lt;strong&gt;Chocolatey:&lt;/strong&gt;
Chocolatey CMD üzerinden kolaylıkla kurulabiliyor. Bunun için CMD&amp;rsquo;yi yönetici (administrator) modda başlatmalısınız ve ardından aşağıdaki komutu komut satırına yazarak yükleme işlemi sağlayabilirsiniz.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;@powershell -NoProfile -ExecutionPolicy Bypass -Command &lt;span class=&#34;s2&#34;&gt;&amp;#34;iex ((New-Object System.Net.WebClient).DownloadString(&amp;#39;https://chocolatey.org/install.ps1&amp;#39;))&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; SET &lt;span class=&#34;s2&#34;&gt;&amp;#34;PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Linux:&lt;/strong&gt;
&lt;strong&gt;Homebrew Kurulumu:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /usr/local
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;mkdir homebrew &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; curl -L https://github.com/Homebrew/brew/tarball/master &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; tar xz --strip &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; -C homebrew
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;hugo-kurulumu&#34;&gt;Hugo Kurulumu&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. Hugo Kurulumu:&lt;/strong&gt;
Hugo&amp;rsquo;yu kurmak için aşağıdaki komutu çalıştırınız. Bu lokal bilgisayarınıza kurulumu yapacaktır.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MacOS:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;brew install hugo
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Windows:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;choco install hugo-extended -confirm
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Linux:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;brew install hugo
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;2. Kurulumu Doğrulayalım:&lt;/strong&gt;
Kurulumun doğru yapıldığını kontrol etmek için aşağıdaki komutu çalıştırınız.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MacOS / Windows / Linux:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;hugo version
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;3. Hugo Sitesi Oluşturma:&lt;/strong&gt;
&amp;ldquo;blog&amp;rdquo; adında bir site oluşturalım. Komutun çalıştırıldığı dizinde &amp;ldquo;blog&amp;rdquo; isminde bir dizin oluşturur.
&lt;strong&gt;MacOS / Windows / Linux:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;hugo new site blog
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;4. Tema ekleme:&lt;/strong&gt;
Hugo birçok tema sunmaktadır. HTML ve CSS bilginizle kendi temanızı yapabileceğiniz gibi Hugo&amp;rsquo;nun &lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;Tema&lt;/a&gt; sayfasından seçebilirsiniz. Örnek olarak, Meme temasını seçmiş olalım. Daha sonra temanın Github sayfasına erişerek, aşağıdaki komutu çalıştıralım.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; blog
git init
git submodule add https://github.com/reuixiy/hugo-theme-meme themes/meme
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;5. Site Ayarlarını Yapma:&lt;/strong&gt;
Site ayarları config.toml dosyası üzerinden yapılmaktadır. Temanızın da ayarlarını da içerir. Bunun en doğru yolu, temanızın örnek içeriğindeki &amp;ldquo;config.toml&amp;rdquo; dosyasını değiştirmektir.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5.1. Config Dosyasına Erişim:&lt;/strong&gt;
(&lt;a href=&#34;https://github.com/reuixiy/hugo-theme-meme/tree/master/exampleSite)%5Bhttps://github.com/reuixiy/hugo-theme-meme/tree/master/exampleSite%5D&#34;&gt;https://github.com/reuixiy/hugo-theme-meme/tree/master/exampleSite)[https://github.com/reuixiy/hugo-theme-meme/tree/master/exampleSite]&lt;/a&gt; dizinindeki &amp;ldquo;config.tompl&amp;rdquo; dosyasını &amp;ldquo;blog&amp;rdquo; dizininiz altına koyunuz (Bu dizinde zaten config.toml bulunuyor, yapıştırarak değiştirebilirsiniz.)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5.2 Config Dosyasını Değiştirme&lt;/strong&gt;
Her temanın kendine özgü ayarları bulunmaktadır; ancak biz genel olan her site için gerekli olan ayarlar üzerinde duracağız.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;nx&#34;&gt;baseURL&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://example.com/&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;BaseURL ayarı sitenizi nerede hangi alan adında yayınlayacağınıza göre değişmektedir. Eğer bir alan adına sahipseniz, buraya onu yazınınz (&amp;ldquo;&lt;a href=&#34;http://volkanulutas.com&#34;&gt;http://volkanulutas.com&lt;/a&gt;&amp;rdquo;) gibi. Eğer alan adına sahip değilseniz, GithubPage adresinizi yazmalısınız. Blogumuzu GitHubPages üzerinde yayımlamayı  (TODO: Githubpages yazısı)
Alan adınız bulunuyorsa;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;nx&#34;&gt;baseURL&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://volkanulutas.github.io/&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Alan adınız yoksa;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;nx&#34;&gt;baseURL&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://volkanulutas.github.io/&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Genellikle her temada yer alan menü yapısı aşağıdaki gibi ayarlanır.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;menu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;err&#34;&gt;##&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Menu&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;bar&lt;/span&gt;
    &lt;span class=&#34;err&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;menu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
    &lt;span class=&#34;err&#34;&gt;#&lt;/span&gt;     &lt;span class=&#34;nx&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;err&#34;&gt;#&lt;/span&gt;     &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Home&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;err&#34;&gt;#&lt;/span&gt;     &lt;span class=&#34;nx&#34;&gt;weight&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
    &lt;span class=&#34;err&#34;&gt;#&lt;/span&gt;     &lt;span class=&#34;nx&#34;&gt;pre&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;internal&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;err&#34;&gt;#&lt;/span&gt;     &lt;span class=&#34;nx&#34;&gt;post&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;home&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;menu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/posts/&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Posts&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;weight&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;pre&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;internal&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;post&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;archive&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;menu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/categories/&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Categories&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;weight&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;pre&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;internal&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;post&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;th&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;menu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/tags/&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Tags&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;weight&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;pre&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;internal&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;post&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;tags&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;menu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/about/&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;About&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;weight&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;pre&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;internal&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;post&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;user-circle&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;menu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;weight&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;identifier&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;theme-switcher&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;menu&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;weight&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;identifier&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;lang-switcher&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Menü yapısında gözükecek sayfaların ayarlanması bu bölümde yapılır. Anadizinde (blog dizininde) yer alan &amp;ldquo;content&amp;rdquo; dizinine koyacağınız &amp;ldquo;about.md&amp;rdquo; dosyası menü dizininde &amp;ldquo;About&amp;rdquo; isminde gözükecetir. &amp;ldquo;posts&amp;rdquo; dizininde yer alacak, &amp;ldquo;md&amp;rdquo; uzantılı dosyalar ise, &amp;ldquo;categories&amp;rdquo; ve &amp;ldquo;posts&amp;rdquo; olarak gözükecektir. Ayrıca bu temanın özelliği anasayfada &amp;ldquo;posts&amp;rdquo; altında yer alan &amp;ldquo;md&amp;rdquo; dosyaları gösterilecektir.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. Yeni Bir İçerik Ekleme:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MacOS / Windows / Linux:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;hugo new posts/my-first-post.md
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;strong&gt;7. Yazı Ekleme:&lt;/strong&gt;
İçeriği bir editörde açıp, aşağıdaki gibi bir &amp;ldquo;header&amp;rdquo; dosyası eklemeliyiz, bu &amp;ldquo;header&amp;rdquo; dosyası içerikte gözükmeyecektir; ancak &amp;ldquo;post&amp;quot;un kategori, etiket (etiket), tarih, yayınlansın mı? gibi özellikleri ayarlanır.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;o&#34;&gt;---&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;author&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Volkan Ulutaş&amp;#34;&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2019&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;07&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;linktitle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Latex&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Kurulumu&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Windows&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Visual&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Code&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;MikTex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;post&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;posts&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Latex&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Kurulumu&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Windows&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Visual&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Code&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;MikTex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;weight&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;tags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;latex&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;visual&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;code&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;miktex&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;categories&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;İpuçları&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;series&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Kurulumlar&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;draft&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Örneğin burada etiket (tag), kategori (category), seri (series), tarih (date), yazar (author) gibi özellikler verilir. En önemli diyebileceğimiz özellik &amp;ldquo;draft: false&amp;rdquo; olarak verilmesidir, bu şekilde verilerek &amp;ldquo;post&amp;rdquo; yayına alınır, eğer bu şekilde verilmezse yazı gözükmeyecektir, &amp;ldquo;draft&amp;rdquo; olarak kalacaktır.&lt;/p&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;&lt;strong&gt;Blogu Localhost&amp;rsquo;da Yayına Alma:&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;MacOS / Windows / Linux:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;hugo server -D
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Bu komut ile birlikte &lt;a href=&#34;http://localhost:1313&#34;&gt;http://localhost:1313&lt;/a&gt; alanında site yayınlanmaya başlayacaktır (Konsol&amp;rsquo;da bu port yayınlanmaktadır, bazen farklı bir porttan yayınlanabiliyor bu kısma dikkat ediniz.)&lt;/p&gt;
&lt;p&gt;Bir sonraki yazımızda Hugo blogumuzu GithupPage üzerinden yayınlamayı inceleyeceğiz.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kaynaklar:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/getting-started/installing/&#34;&gt;Hugo Resmi Sitesi Kurulum Sayfası&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Soru, görüş ve önerilerinizi bu sayfaya yorum yapabilirsiniz. Bana erişmek için &lt;a href=&#34;mailto:volkanulutas@gmail.com&#34;&gt;volkanulutas@gmail.com&lt;/a&gt; adresini kullanabilirsiniz.&lt;/p&gt;
</description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/categories/hugo/">Hugo</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/hugo/">Hugo</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>SSH ile Compute Engine&#39;de Oluşturulan Makineye Erişim Sağlamak (Windows)</title>
                <link>http://volkanulutas.com/posts/2020-05-18-computingengine_ssh_baglantisi_windows/</link>
                <guid isPermaLink="true">http://volkanulutas.com/posts/2020-05-18-computingengine_ssh_baglantisi_windows/</guid>
                <pubDate>Mon, 18 May 2020 00:00:00 &#43;0000</pubDate>
                
                    <author>volkanulutas@gmail.com (Volkan Ulutaş)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright>
                
                    <description>&lt;p&gt;Merhabalar, &lt;a href=&#34;https://cloud.google.com/&#34;&gt;Google Cloud Platform (GCP)&lt;/a&gt;&amp;lsquo;un altında yer alan Compute Engine servisinde tanımlamış olduğumuz bir makineye nasıl erişim sağlayabileceğimizi göreceğiz. ( &lt;a href=&#34;http://volkanulutas.com/posts/2020-05-18-computingengine_ssh_baglantisi_macos/&#34;&gt;önceki yazımızda&lt;/a&gt; MacOS üzerinden erişimden bahsetmiştik.)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&amp;ldquo;Private/Public Key&amp;rdquo; mimarisine göre öncelikle kendi makinemizde &amp;ldquo;public&amp;rdquo; ve &amp;ldquo;private key&amp;rdquo; oluşturacağız ve CE&amp;rsquo;deki makinemize oluşturduğumuz &amp;ldquo;public key&amp;quot;i ekleyeceğiz. Daha sonra kendi makinemizde yer alan &amp;ldquo;private key&amp;rdquo; ile CE&amp;rsquo;deki makinemize erişeceğiz. Bunun için (PuTTYgen)[https://www.puttygen.com/] uygulamasını indirelim.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PuTTYgen uygulamasını açıp, &amp;ldquo;Type of key to generate&amp;rdquo; alanında &amp;ldquo;SSH-2 RSA&amp;rdquo; seçeneğini seçelim ve &amp;ldquo;Generate&amp;rdquo; butonuna basalım ve belirli süre sonunda &amp;ldquo;private&amp;rdquo; ve &amp;ldquo;public key&amp;quot;ler oluşturulmuş olacaktır.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;ldquo;Key passphrase&amp;rdquo; alanına tıklayıp bir şifre belirleyelim, daha sonra aynı şifreyi &amp;ldquo;Confirm passphrase&amp;rdquo; alanıyla doğrulayın.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;ldquo;Save private key&amp;rdquo; butonu ile &amp;ldquo;private key&amp;quot;inize bilgisayarınıza kaydetmiş olacaksınız.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;ldquo;Public key for pasting into OpenSSH authorized_keys file&amp;rdquo; alanına sağ seçim yaparak &amp;ldquo;Select All&amp;quot;u seçelim.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Son adım olarak sağ seçim ile oluşan metni kopyalıyalım (public key).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://volkanulutas.com/images/gcp-ce-3/1.png&#34; alt=&#34;metin&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;Bu adımda CE instance&amp;rsquo;ımıza &amp;ldquo;public key&amp;quot;i koymak olacaktır. Bunun için &lt;a href=&#34;https://console.cloud.google.com/compute/&#34;&gt;CE Konsol&lt;/a&gt;&amp;lsquo;una gidelim. Ad kolonunda yer alan &amp;ldquo;instance-1&amp;rdquo; ismine tıklayıp, açılan ekranda &amp;ldquo;Düzenle&amp;quot;ye tıklayalım.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://volkanulutas.com/images/gcp-ce-2/2.png&#34; alt=&#34;metin&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;Daha sonra &amp;ldquo;SSH Anahtarları&amp;rdquo; bölümüne gelene kadar sayfada aşağıya ininiz.  &amp;ldquo;Sahip olduğunuz 0 SSH anahtarı var&amp;rdquo; metninin altında &amp;ldquo;ÖĞE EKLE&amp;rdquo; alanına tıklayınız. Bu alana oluşturduğumuz public key&amp;rsquo;imizi metin olarak yapıştıracağız.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://volkanulutas.com/images/gcp-ce-2/3.png&#34; alt=&#34;metin&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;9&#34;&gt;
&lt;li&gt;Bu adımda masaüstünüzde oluşturduğunuz key.pub dosyasının bir editor ile açınız. (Notepad++ ile açabilirsiniz.) Buradaki metni kopyalayıp, 8. adımda belirtilen alana yapıştırınız. Daha sonra sayfanın en altında bulunan &amp;ldquo;Kaydet&amp;rdquo; butonına basınız.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://volkanulutas.com/images/gcp-ce-2/4.png&#34; alt=&#34;metin&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://volkanulutas.com/images/gcp-ce-2/5.png&#34; alt=&#34;metin&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://volkanulutas.com/images/gcp-ce-2/6.png&#34; alt=&#34;metin&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;10&#34;&gt;
&lt;li&gt;Son adım olarak, PuTTy uygulamasını indiriyoruz. PuTTy uygulamasını aşağıdaki resimlerdeki gibi konfigüre etmeliyiz. &amp;ldquo;&lt;a href=&#34;mailto:volkanulutas@104.197.171.167&#34;&gt;volkanulutas@104.197.171.167&lt;/a&gt;&amp;rdquo; alanı için ise 2.adımda kullandığımız en son parametreyi belirtiyor. Adresi ise CE&amp;rsquo;de instance&amp;rsquo;ımızın &amp;ldquo;Harici IP&amp;rdquo; alanına denk gelmektedir. Son olarak &amp;ldquo;private key&amp;quot;i de bu bağlantıya vermeliyiz.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://volkanulutas.com/images/gcp-ce-3/2.png&#34; alt=&#34;metin&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://volkanulutas.com/images/gcp-ce-3/3.png&#34; alt=&#34;metin&#34;&gt;&lt;/p&gt;
&lt;p&gt;Bu şekilde GCP CE üzerinde yer alan makinemize erişim sağlamış olduk, kendi uygulamalarımızı bu şekilde gerekli kurulumları yaparak test edebiliriz veya sunabiliriz.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kaynaklar&lt;/strong&gt;
&lt;a href=&#34;https://cloud.google.com/compute/docs/instances/connecting-advanced#provide-key&#34;&gt;GCP&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Bu şekilde kurulumu tamamlanmış olduk. Soru, görüş ve önerilerinizi bu sayfaya yorum yapabilirsiniz. Bana erişmek için &lt;a href=&#34;mailto:volkanulutas@gmail.com&#34;&gt;volkanulutas@gmail.com&lt;/a&gt; adresini kullanabilirsiniz.&lt;/p&gt;
</description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/categories/google-compute-engine/">Google Compute Engine</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/google-cloud-platform/">Google Cloud Platform</category>
                                
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/computing-engine/">Computing Engine</category>
                                
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/cloud/">Cloud</category>
                                
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/ssh/">SSH</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>SSH ile Compute Engine&#39;de Oluşturulan Makineye Erişim Sağlamak (MacOS)</title>
                <link>http://volkanulutas.com/posts/2020-05-18-computingengine_ssh_baglantisi_macos/</link>
                <guid isPermaLink="true">http://volkanulutas.com/posts/2020-05-18-computingengine_ssh_baglantisi_macos/</guid>
                <pubDate>Sun, 17 May 2020 00:00:00 &#43;0000</pubDate>
                
                    <author>volkanulutas@gmail.com (Volkan Ulutaş)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright>
                
                    <description>&lt;p&gt;Merhabalar, bu yazımda sizlere &lt;a href=&#34;https://cloud.google.com/&#34;&gt;Google Cloud Platform (GCP)&lt;/a&gt;&amp;lsquo;un altında yer alan Compute Engine servisinde tanımlamış olduğumuz bir makineye nasıl erişim sağlayabileceğimizi göreceğiz.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&amp;ldquo;Private/Public Key&amp;rdquo; mimarisine göre öncelikle kendi makinemizde &amp;ldquo;public&amp;rdquo; ve &amp;ldquo;private key&amp;rdquo; oluşturacağız ve CE&amp;rsquo;deki makinemize oluşturduğumuz &amp;ldquo;public key&amp;quot;i ekleyeceğiz. Daha sonra kendi makinemizde yer alan &amp;ldquo;private key&amp;rdquo; ile CE&amp;rsquo;deki makinemize erişeceğiz. Bunun için terminali açalım. (Launchpad açılarak Terminal yazılabilir.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Terminalde aşağıdaki komutu kendi kullanıcı adınıza göre değiştirerek çalıştırınız. (Yani volkanulutas yazan yere kendi kullanıcı adınızı yazınız. -C den sonra herhangi bir isim verebilirsiniz; ancak basitlik açısından aynı ismi kullandım.)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;ssh-keygen -t rsa -f /Users/volkanulutas/Desktop/key -C volkanulutas 
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Bu komutla birlikte sizden şifre oluşturmanızı isteyecektir, iki defa belirlediğiniz bir şifreyi giriniz. Terminal görüntüsü aşağıdaki gibi olacaktır ve masaüstünüzde &amp;ldquo;key&amp;rdquo; (private key) ve &amp;ldquo;key.pub&amp;rdquo; (public key) isminde iki dosya oluşacaktır.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://volkanulutas.com/images/gcp-ce-2/1.png&#34; alt=&#34;metin&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Bu adımda CE instance&amp;rsquo;ımıza &amp;ldquo;public key&amp;quot;i koymak olacaktır. Bunun için &lt;a href=&#34;https://console.cloud.google.com/compute/&#34;&gt;CE Konsol&lt;/a&gt;&amp;lsquo;una gidelim. Ad kolonunda yer alan &amp;ldquo;instance-1&amp;rdquo; ismine tıklayıp, açılan ekranda &amp;ldquo;Düzenle&amp;quot;ye tıklayalım.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://volkanulutas.com/images/gcp-ce-2/2.png&#34; alt=&#34;metin&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Daha sonra &amp;ldquo;SSH Anahtarları&amp;rdquo; bölümüne gelene kadar sayfada aşağıya ininiz.  &amp;ldquo;Sahip olduğunuz 0 SSH anahtarı var&amp;rdquo; metninin altında &amp;ldquo;ÖĞE EKLE&amp;rdquo; alanına tıklayınız. Bu alana oluşturduğumuz &amp;ldquo;public key&amp;quot;imizi metin olarak yapıştıracağız.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://volkanulutas.com/images/gcp-ce-2/3.png&#34; alt=&#34;metin&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Bu adımda masaüstünüzde oluşturduğunuz key.pub dosyasının bir editor ile açınız. (TextEdit, SublimeText ile açabilirsiniz.) Buradaki metni kopyalayıp, 4. adımda belirtilen alana yapıştırınız. Daha sonra sayfanın en altında bulunan &amp;ldquo;Kaydet&amp;rdquo; butonuna basınız.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://volkanulutas.com/images/gcp-ce-2/4.png&#34; alt=&#34;metin&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://volkanulutas.com/images/gcp-ce-2/5.png&#34; alt=&#34;metin&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://volkanulutas.com/images/gcp-ce-2/6.png&#34; alt=&#34;metin&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;Son adım olarak, aşağıdaki komutu terminale yapıştırınız. Burada &amp;ldquo;public key&amp;quot;i masaüstüne oluşturduğumuz için bu dizini verdik, düzenleme yapmanız gerekmektedir. &amp;ldquo;&lt;a href=&#34;mailto:volkanulutas@104.197.171.167&#34;&gt;volkanulutas@104.197.171.167&lt;/a&gt;&amp;rdquo; alanı için ise 2.adımda kullandığımız en son parametreyi belirtiyor. Adresi ise CE&amp;rsquo;de instance&amp;rsquo;ımızın &amp;ldquo;Harici IP&amp;rdquo; alanına denk gelmektedir.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;ssh -i /Users/volkanulutas/Desktop/key volkanulutas@104.197.171.167 
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://volkanulutas.com/images/gcp-ce-2/7.png&#34; alt=&#34;metin&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://volkanulutas.com/images/gcp-ce-2/8.png&#34; alt=&#34;metin&#34;&gt;&lt;/p&gt;
&lt;p&gt;Bu şekilde GCP CE üzerinde yer alan makinemize erişim sağlamış olduk, kendi uygulamalarımızı bu şekilde gerekli kurulumları yaparak test edebiliriz veya sunabiliriz.&lt;/p&gt;
&lt;p&gt;Bu şekilde kurulumumu tamamlanmış olduk. Soru, görüş ve önerilerinizi bu sayfaya yorum yapabilirsiniz. Bana erişmek için &lt;a href=&#34;mailto:volkanulutas@gmail.com&#34;&gt;volkanulutas@gmail.com&lt;/a&gt; adresini kullanabilirsiniz.&lt;/p&gt;
</description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/categories/google-compute-engine/">Google Compute Engine</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/google-cloud-platform/">Google Cloud Platform</category>
                                
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/computing-engine/">Computing Engine</category>
                                
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/cloud/">Cloud</category>
                                
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/ssh/">SSH</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>GCP - Compute Engine Makine Oluşturma</title>
                <link>http://volkanulutas.com/posts/2020-05-10-computingengine_giris/</link>
                <guid isPermaLink="true">http://volkanulutas.com/posts/2020-05-10-computingengine_giris/</guid>
                <pubDate>Sun, 10 May 2020 00:00:00 &#43;0000</pubDate>
                
                    <author>volkanulutas@gmail.com (Volkan Ulutaş)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright>
                
                    <description>&lt;p&gt;Merhabalar, bu yazımda sizlere &lt;a href=&#34;https://cloud.google.com/&#34;&gt;Google Cloud Platform (GCP)&lt;/a&gt; servisinden bahsedeğim ve Compute Engine sisteminde tanımlamış olduğumuz bir makineye nasıl erişim sağlayabileceğimizi göreceğiz.&lt;/p&gt;
&lt;h2 id=&#34;google-cloud-platform&#34;&gt;Google Cloud Platform&lt;/h2&gt;
&lt;p&gt;GCP, Google&amp;rsquo;ın tüm bulut tabanlı servislerini içerir. Bulut tabanlı olarak veri depolama ve sunma, veri analizi ve makine öğrenimi gibi hizmetleri sunar. Bu hizmetleri &amp;ldquo;kullandıkça öde&amp;rdquo; sistemine göre sağlamaktadır. Yani siz sunmak istediğiniz bir web uygulamasını, hizmet verdiğiniz müşterilerin kullanım oranlarına göre ücretlendirir ve fiziksel olarak sizin sunucu alıp işletme maliyetinden kurtarır. Ek olarak Google GPC ile arama, Gmail ve Youtube gibi hizmetleri içinde GPC altyapısını kullanmaktadır. GPC,  IaaS (infrastructure as a service), PaaS (platform as a service), and sunucusuz mimari (serverless computing environments) yaklaşımlarında hizmet vermektedir.&lt;/p&gt;
&lt;h2 id=&#34;compute-engine&#34;&gt;Compute Engine&lt;/h2&gt;
&lt;p&gt;Bu yazımızda Compute Engine (CE) sistemine odaklanacağımızı belirtmiştik. Ulaşılabilirliği çok yüksek olan bir hizmettir ve CE sayesinde kendi sunucunuza erişim sağlar gibi SSH sayesinde erişim sağlayıp istediğiniz teknolojiyi kullandığınız işletim sisteminin desteği doğrultusunda kullanabilirsiniz. Örneğin, Linux tabanlı Ubuntu tercihiniz doğrultusunda SSH kullanarak sisteme bağlanıp isteğiniz teknolojilerin kurulumu ile birlikte kendi uygulamanızı sunabilirsiniz. Spring Boot tabanlı, Mongo veritabanı kullanan bir docker imajı üretip burada Kubernates ile yöneterek ulaşılabilirliği, yedekliliği yüksek sistemlerinizi test edebilir veya son ürün olarak sunabilirsiniz (deploy). Daha sonraki bir yazımızda PaaS özelliğine de değinmeyi planlıyorum, burada hazır bir geliştirme ortamı sunuluyor gibi düşünebiliriz, yani platforma özgü yazılımlar ön yüklü olarak gelmektedir, bu kurulumlarla da uğraşmamaktasınız.&lt;/p&gt;
&lt;p&gt;Sistemde temel özellikler ücretsiz olarak sunulmaktadır. Tüm özellikleri denemeniz için ise 300 dolarlık bir kredi tanımlanmaktadır. Dezavantajlı olarak görülebilecek bir özelliği ise kredi kartınızı sisteme tanımlamanız gerekmektedir; ancak Google bu konuda şeffaf davranarak sizin ne yaparsanız ücretli bir işlem yaptığınız hakkında her adımda sizi uyarmaktadır, yani deneme amaçlı veya test amaçlı olarak kullanımlarda, kredi kartınıza herhangi bir ücret yansıtmamaktadır.&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Compute Engine&amp;rsquo;nin En temel özelliklerinden biri yazılımcıların oluşturdukları uygulamayı test etmek veya ürün haline getirip bulutta sunmak için kullanabilecekleri bir servis olarak tanımlayabiliriz.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;compute-enginede-ücretsiz-olarak-makine-oluşturma&#34;&gt;Compute Engine&amp;rsquo;de Ücretsiz Olarak Makine Oluşturma&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://console.cloud.google.com/compute&#34;&gt;GCP&lt;/a&gt; adresine giderek Google hesabınızla giriş yapınız. Aşağıdaki resimde görüldüğü gibi bir ekran ile karşılaşacaksınız.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://volkanulutas.com/images/gcp-ce-1/1.png&#34; alt=&#34;metin&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Resimde görülen &amp;ldquo;ÖRNEK OLUŞTUR&amp;rdquo; butonuna tıklayalım. Gelen ekran aşağıda gösterilmektedir. Burada sadece &amp;ldquo;Önyükleme Diski&amp;rdquo; alanını &amp;ldquo;Değiştir&amp;rdquo; butonunu kullanarak &amp;ldquo;Ubuntu&amp;rdquo; olarak değiştirelim.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://volkanulutas.com/images/gcp-ce-1/2.png&#34; alt=&#34;metin&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;Daha sonra sayfanın en altında bulunan &amp;ldquo;Oluştur&amp;rdquo; butona basarak tamamlayalım.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Belirli bir süre geçtikten sonra aşağıdaki resimde görüldüğü gibi &amp;ldquo;intance-1&amp;rdquo; isminde bir makinemiz oluşmuş olacaktır. Burada önemli bir bilgi &amp;ldquo;Harici IP&amp;rdquo; kısmında yer alan adrestir. Bu adresi kullanarak bu makineye SSH kullanarak erişim sağlayacağız.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://volkanulutas.com/images/gcp-ce-1/3.png&#34; alt=&#34;metin&#34;&gt;&lt;/p&gt;
&lt;p&gt;Bu şekilde makinenin kurulumunu tamamlanmış olduk. Soru, görüş ve önerilerinizi bu sayfaya yorum yapabilirsiniz. Bana erişmek için &lt;a href=&#34;mailto:volkanulutas@gmail.com&#34;&gt;volkanulutas@gmail.com&lt;/a&gt; adresini kullanabilirsiniz.&lt;/p&gt;
</description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/categories/google-compute-engine/">Google Compute Engine</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/google-cloud-platform/">Google Cloud Platform</category>
                                
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/computing-engine/">Computing Engine</category>
                                
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/cloud/">Cloud</category>
                                
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/linux/">linux</category>
                                
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/devops/">devops</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>Maven Kurulumu (MacOS)</title>
                <link>http://volkanulutas.com/posts/2020-05-02-maven_kurulumu_macos/</link>
                <guid isPermaLink="true">http://volkanulutas.com/posts/2020-05-02-maven_kurulumu_macos/</guid>
                <pubDate>Sat, 02 May 2020 00:00:00 &#43;0000</pubDate>
                
                    <author>volkanulutas@gmail.com (Volkan Ulutaş)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright>
                
                    <description>&lt;p&gt;Maven&amp;rsquo;ı MacOS işletim sistemine sahip bilgisayarınıza yüklemek için aşağıdaki adımları takip edebilirsiniz.&lt;/p&gt;
&lt;h1 id=&#34;maven-kurulumu-kontrol-etme&#34;&gt;Maven Kurulumu Kontrol Etme&lt;/h1&gt;
&lt;p&gt;Maven bazı MacOS versiyonlarında önyüklü olarak gelmektedir, kontrol etmek için aşağıdaki komutu terminalde çalıştırınız.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$mvn&lt;/span&gt; -version
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Sonuç olarak:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;Apache Maven 3.6.3 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;cecedd343002696d0abb50b32b541b8a6ba2883f&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
Maven home: /Users/volkanulutas/apache-maven-3.6.3
Java version: 1.8.0_231, vendor: Oracle Corporation, runtime: /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre
Default locale: tr_TR, platform encoding: UTF-8
OS name: &lt;span class=&#34;s2&#34;&gt;&amp;#34;mac os x&amp;#34;&lt;/span&gt;, version: &lt;span class=&#34;s2&#34;&gt;&amp;#34;10.15.4&amp;#34;&lt;/span&gt;, arch: &lt;span class=&#34;s2&#34;&gt;&amp;#34;x86_64&amp;#34;&lt;/span&gt;, family: &lt;span class=&#34;s2&#34;&gt;&amp;#34;mac&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;maven-kurulum-dizini&#34;&gt;Maven Kurulum Dizini&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ whereis mvn
/usr/bin/mvn
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /usr/bin
&lt;span class=&#34;nv&#34;&gt;$$&lt;/span&gt; ls -ls &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep mvn
 &lt;span class=&#34;m&#34;&gt;8&lt;/span&gt; lrwxr-xr-x   &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; root   wheel        &lt;span class=&#34;m&#34;&gt;24&lt;/span&gt; May &lt;span class=&#34;m&#34;&gt;23&lt;/span&gt; 15:57 mvn -&amp;gt; /usr/share/maven/bin/mvn
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Varsayılan olarak Maven /usr/share/maven dizinine ön tanımlı olarak yüklenmiştir, bir konfigürasyon değişikliği yapmanıza gerek bulunmuyor.&lt;/p&gt;
&lt;h1 id=&#34;maven-manuel-olarak-kurulumu&#34;&gt;Maven Manuel Olarak Kurulumu&lt;/h1&gt;
&lt;p&gt;Mac OS X Mavericks ve sonrasında Maven ön yüklü olarak gelmemektedir. Aşağıdaki adımlarla kurulumu yapalım:&lt;/p&gt;
&lt;h2 id=&#34;maven-indir&#34;&gt;Maven İndir&lt;/h2&gt;
&lt;p&gt;Maven&amp;rsquo;ı &lt;a href=&#34;https://maven.apache.org/install.html&#34;&gt;buradan&lt;/a&gt; indirebilirsiniz. (Örneğin; apache-maven-3.6.3-bin.tar.gz)&lt;/p&gt;
&lt;p&gt;Aşağıdaki komutla sıkıştırılmış indirme dosyasını açıyoruz. Bu işlemi yaparken eğer indirilen dosya /Users/volkanulutas/ dizinine taşımalısınız:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$cp&lt;/span&gt; /User/volkanulutas/Downloads/apache-maven-3.6.3-bin.tar.gz /Users/volkanulutas
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$tar&lt;/span&gt; -xvf apache-maven-3.6.3-bin.tar.gz
 
&lt;span class=&#34;nv&#34;&gt;$pwd&lt;/span&gt;
/Users/volkanulutas/apache-maven-3.6.3
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;maveni-ortam-değişkeni-olarak-ayarlama&#34;&gt;Maven&amp;rsquo;i Ortam Değişkeni Olarak Ayarlama&lt;/h3&gt;
&lt;p&gt;Bunu ayarlama ile terminal hangi dizinde olursa olsun &amp;ldquo;mvn&amp;rdquo; komutlarını çalıştırabileceğiz.&lt;/p&gt;
&lt;p&gt;Aşağıdaki komutla eğer bash_profile yoksa yaratacaktır.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;~/. bash_profile
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Aşağıda nano ile ~/.bash_profile dosyasını açıyoruz. &amp;ldquo;export&amp;rdquo; satırlarını ekledikten sonra kaydetmek için cntrl + O (^ O) ve çıkmak için cntrl + X (^ X) kullanılabilir. (nano yerine vim komutunu da kullanabilirsiniz.)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ nano ~/.bash_profile
~/.bash_profile
&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;M2_HOME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/Users/volkanulutas/apache-maven-3.6.3
&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;PATH&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PATH&lt;/span&gt;:&lt;span class=&#34;nv&#34;&gt;$M2_HOME&lt;/span&gt;/bin
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Kurulumun doğru yapılıp yapılmadığını kontrol etemk için:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$mvn&lt;/span&gt; -version

Apache Maven 3.6.3 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;cecedd343002696d0abb50b32b541b8a6ba2883f&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
Maven home: /Users/volkanulutas/apache-maven-3.6.3
Java version: 1.8.0_231, vendor: Oracle Corporation, runtime: /Library/Java/JavaVirtualMachines/jdk1.8.0_231.jdk/Contents/Home/jre
Default locale: tr_TR, platform encoding: UTF-8
OS name: &lt;span class=&#34;s2&#34;&gt;&amp;#34;mac os x&amp;#34;&lt;/span&gt;, version: &lt;span class=&#34;s2&#34;&gt;&amp;#34;10.15.4&amp;#34;&lt;/span&gt;, arch: &lt;span class=&#34;s2&#34;&gt;&amp;#34;x86_64&amp;#34;&lt;/span&gt;, family: &lt;span class=&#34;s2&#34;&gt;&amp;#34;mac&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Bu şekilde kurulumumu tamamlanmış olduk. Soru, görüş ve önerilerinizi bu sayfaya yorum yapabilirsiniz. Bana erişmek için &lt;a href=&#34;mailto:volkanulutas@gmail.com&#34;&gt;volkanulutas@gmail.com&lt;/a&gt; adresini kullanabilirsiniz.&lt;/p&gt;
</description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/categories/ipu%C3%A7lar%C4%B1/">İpuçları</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/maven/">Maven</category>
                                
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/macos/">macos</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>Logger&#39;ların Tarihçesi</title>
                <link>http://volkanulutas.com/posts/2020-04-23-loggerlarin-tarihcesi/</link>
                <guid isPermaLink="true">http://volkanulutas.com/posts/2020-04-23-loggerlarin-tarihcesi/</guid>
                <pubDate>Thu, 23 Apr 2020 00:00:00 &#43;0000</pubDate>
                
                    <author>volkanulutas@gmail.com (Volkan Ulutaş)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright>
                
                    <description>&lt;p&gt;&lt;img src=&#34;http://volkanulutas.com/images/loggerlarin-tarihesi/dolmabahce.jpg&#34; alt=&#34;alt text&#34; title=&#34;Dolmabahçe Sarayı, İstanbul (Fotoğraf: @colorartistanbul Unsplash ve Instagram)&#34;&gt;&lt;/p&gt;
&lt;p&gt;Log kelimesini Türkçeye &amp;ldquo;günlük kaydı&amp;rdquo; veya &amp;ldquo;olay kaydı&amp;rdquo; olarak Türkçe&amp;rsquo;ye çevirmek mümkündür. Log bilgileri bir yazılım projesi geliştirirken, geliştiricilerin hem test hem de canlı çalışma ortamlarında büyük avantajlar sağlamaktadır. Örneğin geliştirme ortamında debug (hata ayıklayıcısı) yöntemini kullanabilen yazılımcılar, canlı (prod) veye test ortamlarında böyle bir imkana sahip olamazlar. Özellikle canlı ortamda, potansiyel hataları yakalamak için loglama ihtiyacı bulunur. Bunun yanı sıra bazen bu log bilgileri gereksinimler düzeyinde de istenilmektedir. Örneğin; &amp;ldquo;Belirli rol yetkisine sahip kullanıcının hangi servise veya alana ne zaman giriş yaptığı&amp;rdquo; gibi bilgiler yine log kütüphaneleri yardımıyla kolaylıkla elde edilebilir. Kısacası log tanımını aşağıdaki gibi yapmak uygun olacaktır:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Belirli bir sistemle ilgili olayların otomatik olarak ve zaman damgalı belgelendirilmesidir.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Java’da, çok uzun bir süre önce, loglamanın bir yolu yoktu. İlkel yöntemlerle loglama yapılıyordu:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;System.out&lt;/li&gt;
&lt;li&gt;System.err&lt;/li&gt;
&lt;li&gt;Exception.printStackTrace()&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bu yapıların bir dezavantajı bulunmaktaydı. Bu log kayıtları sadece konsola yazılmaktaydı ve konsol kapatıldığında bu kayıtlara erişim sağlanamıyordu.  Şimdi bu işlemleri &amp;ldquo;File&amp;rdquo; yönetimiyle log&amp;rsquo;ları oraya kaydedebilirdik diye düşünebilirsiniz; ancak bu işlemlerdeki maliyet çok yüksek olabilmektedir ve hataya açıktır.&lt;/p&gt;
&lt;p&gt;Günümüzün bilinirliği en yüksek loglama kütüphaneleri ise:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;log4j&lt;/li&gt;
&lt;li&gt;logback&lt;/li&gt;
&lt;li&gt;slf4j&lt;/li&gt;
&lt;li&gt;commons-logging&lt;/li&gt;
&lt;li&gt;java.util.logging&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Log4j&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1996 yılında E.U. SEMPER projesi kendi loglama altyapısını oluşturmaya karar verdi. 1999 yıllarında, Log4j kütüphanesi doğmaya başladı. API’nin, Java için popüler loglama paketi haline gelmesi için pek çok çalışmalar yapıldı. Sonrasında,  bir açık kaynak lisansı olan Apache Yazılım Lisansı kapsamında dağıtımına başlanmıştır.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;JUL - java.util.logging&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Log4J projelerde sıklıkla kullanılmaya başlanmıştı. O zamanlar, Java Sun şirketine aitti ve Java içinde bir loglama özelliğine ihtiyaç duyduğunu hissetti, ancak doğrudan Log4j kullanmak yerine, Log4j&amp;rsquo;den esinlenerek, 2002 yılının başlarında JDK 1.4 içerisinde java.util.logging (JUL) paketini oluşturdu; ancak kısa bir süre sonra ortak bir loglama arayüzüne ihtiyaç olduğu anlaşıldı. Bir arayüz tanımı ardından herkes istediği loglama altyapısını kullanabilecek ve tüm bu loglama altyapılarının ayarları sistem tarafından kolaylıkla tek bir merkezden yönetilebilekti, kullanılan her altyapı için ayrı ayrı ayar yapmak zorunda olunmayacaktı. Ayar yaparken bile tek bir standardın öğrenilmesi yetecekti.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Apache Commons (JCL) - Ortak Bir Loglama Altyapına Doğru&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Loglama tarafında birbirinden farklı kütüphaneler ortaya çıkmaya başlayınca 2002 yılı ortalarında Jakarta ekibi &amp;ldquo;commons logging&amp;rdquo; için JCL (Jakarta Commons Logging diğer bilinen adıyla &lt;a href=&#34;https://commons.apache.org/proper/commons-logging/&#34;&gt;Apache Commons Logging Manuel&lt;/a&gt;) projesini çıkardılar. Bu sayede eğer bir loglama altyapısı kullanacaksanız, projenize bu altyapı standartlarına uygun loglama altyapısı ekleyebilir hale geldiniz. Yani burada ortak bir standartlaşma ortaya konularak bir log altyapısının ne yapması gerektiği ve nasıl kullanılacağı standartlaştırılmış oldu, projenizde birden fazla loglama kütüphanesi kullanabilir ve bunların hepsi için ortak ve tek bir tane konfigürasyon dosyası ile yönetim sağlayabilir hale gelmiş olduk.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slf4j&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Loglama kütüphanelerinde evrimleşme devam ederken, JCL yeterince iyi çözümler sunamıyordu. Kullanıcılar tarafından çözdüğünden daha fazla sorun yarattığını söyleniyordu. Ceki Gülcü (Log4j’nin de mimarı olarak bilinir ve &lt;a href=&#34;https://www.amazon.com/Complete-Log4j-Manual-Ceki-Gulcu/dp/2970036908&#34;&gt;Complete Log4j Manuel&lt;/a&gt; kitabının da yazarıdır.) kollarını sıvadı ve 2005 yılında yeni bir SLF4J (Simple Logging Facade) projesini çıkardı. Aslında adı Log4jv2 olabilecekken basitlik vurgusuyla bu ismi seçmiş olabilirler, bilinmez; ama Ceki Gülcü’nün amacı daha iyi bir ortak loglama altyapısı ortaya çıkartmaktı.&lt;/p&gt;
&lt;p&gt;Slf4J&amp;rsquo;nin resmi sitesinde yer alan tanımına bakacak olursak,&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The Simple Logging Facade for Java or (SLF4J) is intended to serve as a simple facade for various logging APIs allowing to the end-user to plug in the desired implementation at deployment time. SLF4J also allows for a gradual migration path away from Jakarta Commons Logging (JCL).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Türkçesiyle;&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Java için SLF4J, son kullanıcının(yazılım geliştiricinin) dağıtım zamanında istenen loglama kütüphanesini projesinde kullanmasına izin veren bir altyapıda &amp;ldquo;facade&amp;rdquo; tasarım örüntüsü kullanılarak geliştirilmiştir. Ek olarak, Jakarta Commons Logging&amp;rsquo;den (JCL) aşamalı şekilde göç etmenize de izin verir.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Logback&lt;/strong&gt;
Log4j, 1999 yılından beri sıklıkla kullanılan loglama altyapısı olmasına rağmen yeterince iyi değildi, yine yaratıcısı tarafından (Ceki Gülcü) yeni bir projeyle - logback ile değiştirildi. 2006 yılında logback görücüye çıktı. Logback, Log4j&amp;rsquo;ye göre daha iyi bir altyapı diyebiliriz çünkü yaratıcısı eski altyapının eksiklerini tespit edip, tecrübelerinin artışıyla birlikte de daha bir altyapı sunmuş oldu. Bu konuda Güclü&amp;rsquo;nün açıklamalarına &lt;a href=&#34;http://logback.qos.ch/reasonsToSwitch.html&#34;&gt;buradan&lt;/a&gt; erişebilirsiniz.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Günümüz&lt;/strong&gt;
Günümüze baktığımızda birçok loglama API&amp;rsquo;sı bulunuyor burada bir kaos ortamı bulunuyor; ancak iki adet ortaklaşma kütüphanesi (commons-logging ve slf4j) sayesinde istediğiniz loglama altyapsını rahatlıkla kullanabiliyoruz diyebiliriz. Projemizi geliştirirken kullandığımız birçok farklı kütüphaneden faydalanıyoruz, hepsinin kullandığı ayrı loglama altyapıları olabiliyor. &amp;ldquo;Classpath&amp;quot;imizde birbirinde farklı bir sürü loglama altyapısı bulunabiliyor, maven sayesinde doğru versiyonları bulabiliyoruz.&lt;/p&gt;
&lt;p&gt;Peki doğru çözüm nedir?
En kısa yoldan slf4j ve logback kullanmaktır diyebiliriz.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Son olarak,&lt;/strong&gt;
Şimdilerde loglama kütüphaneleri sayesinde, ortaklaştırılmasının (ata bir yapıdan türetilmesi) sağlanmasıyla birlikte loglar dosya sisteminde saklanabilir, e-posta ile gönderilebilir, hatta bulut tabanlı sistemler yardımıyla o log&amp;rsquo;tan (hata veya uyarıdan) sorumlu kişiye telefon araması yapma yeteneğine bile sahiptir. Veritabanlarına kaydedilmiş loglar, veri madenciliği uygulamalarıyla anlamlandırılarak sistemin zayıflıkları, hatanın çok yapıldığı yerler tespit edilerek canlı ortamda bulunan bu sorunlar çözülebilir hale geldi.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kaynaklar&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.javacodegeeks.com/2011/09/java-logging-mess.html&#34;&gt;[javacodegeeks, Bozhidar Bozhanov]&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.qos.ch/&#34;&gt;[Şirket Sitesi, Ceki Gülcü]&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.frankel.ch/thoughts-on-java-logging-and-slf4j/&#34;&gt;[Blog, Nicolas Fränkel]&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Soru, görüş ve önerilerinizi bu sayfaya yorum yapabilirsiniz. Bana erişmek için &lt;a href=&#34;mailto:volkanulutas@gmail.com&#34;&gt;volkanulutas@gmail.com&lt;/a&gt; adresini kullanabilirsiniz.&lt;/p&gt;
</description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/categories/yaz%C4%B1l%C4%B1m-tarih%C3%A7eleri/">Yazılım Tarihçeleri</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/log4j/">Log4j</category>
                                
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/apache-commons/">Apache Commons</category>
                                
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/java.util.logging/">java.util.logging</category>
                                
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/slf4j/">Slf4j</category>
                                
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/logback/">Logback</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>Latex Kurulumu MacOS (Visual Code, MikTex)</title>
                <link>http://volkanulutas.com/posts/2019-10-07-latex-kurulumu-macos/</link>
                <guid isPermaLink="true">http://volkanulutas.com/posts/2019-10-07-latex-kurulumu-macos/</guid>
                <pubDate>Mon, 07 Oct 2019 00:00:00 &#43;0000</pubDate>
                
                    <author>volkanulutas@gmail.com (Volkan Ulutaş)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright>
                
                    <description>&lt;p&gt;Merhabalar, bir önceki yazımda Latex kurulumunu Windows üzerinde yapmıştık, ilgili içeriğe buradan erişebilirsiniz. Şimdi kurulumu Mac kullanıcıları için yapacağız.&lt;/p&gt;
&lt;h2 id=&#34;1-gereksinimler&#34;&gt;1. Gereksinimler&lt;/h2&gt;
&lt;p&gt;İlk olarak, aşağıdaki yazılımları indirip, kurulumlarını yapmalısınız.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/download&#34;&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://miktex.org/download&#34;&gt;MikTex&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;2-miktex-kurulumu&#34;&gt;2. MikTex Kurulumu&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;İndirilmiş olan kurulum dosyasını çift tıklayınız. Daha sonra aşağıdaki gibi izin vermeniz gerekebilir.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://volkanulutas.com/images/latex-kurulumu-mac/1.png&#34; alt=&#34;metin&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Aşağıda görülen Mac yükleme ekranındaki gibi MikTex sembolünü &amp;ldquo;Applications&amp;rdquo; sembolünün üzerine sürükleyiniz.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://volkanulutas.com/images/latex-kurulumu-mac/2.png&#34; alt=&#34;metin&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Kurulum tamamlanınca aşağıdaki gibi bir ekran (MikTex Console) belirecektir. Burada aşağıda belirtilen iki seçenekten size uygun olanı seçiniz.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Burada &amp;ldquo;Finish Private Setup&amp;rdquo; seçeceğini seçebilirsiniz. (Bu seçenek sadece ilgili hesap için kurulumu sağlayacaktır. )&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Restart as administrator and finish setup&amp;rdquo; seçeceğini seçerseniz bilgisayarınız &amp;ldquo;restart&amp;rdquo; olup tüm hesaplar için bu kurulum aktif olacaktır.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Ekran görüntüsünde belirtildiği aşağıda işlemleri sırasıyla yaptıktan sonra &amp;ldquo;Update Now&amp;rdquo; seçeceğini seçiniz.&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Start &amp;gt; MikTex Console &amp;gt; Updates &amp;gt; Check for updates menüsünde geliniz.
&lt;img src=&#34;http://volkanulutas.com/images/latex-kurulumu-mac/3.png&#34; alt=&#34;metin&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;http://volkanulutas.com/images/latex-kurulumu-mac/4.png&#34; alt=&#34;metin&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;3-visual-code-kurulumu-ve-latex-ayarı&#34;&gt;3. Visual Code Kurulumu ve Latex Ayarı&lt;/h2&gt;
&lt;p&gt;Eklentiler bölümünden &amp;ldquo;Latex&amp;rdquo; veya &amp;ldquo;Latex Workshop&amp;rdquo; olarak aratarak ilgili eklentiyi indiriniz.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Open Extension &amp;gt; search for Latex &amp;gt; Install LaTeX Workshop&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;http://volkanulutas.com/images/latex-kurulumu/latexWin_3.png&#34; alt=&#34;metin&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;4-latex-yazma&#34;&gt;4. Latex Yazma&lt;/h2&gt;
&lt;p&gt;&amp;ldquo;.tex&amp;rdquo; uzantılı bir dosya yaratarak bunu Visual Code ile açıp, değişiklik yapıp derleyebilirsiniz.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://volkanulutas.com/images/latex-kurulumu/latexWin_4.png&#34; alt=&#34;metin&#34;&gt;&lt;/p&gt;
&lt;p&gt;Soru, görüş ve önerilerinizi bu sayfaya yorum yapabilirsiniz. Bana erişmek için &lt;a href=&#34;mailto:volkanulutas@gmail.com&#34;&gt;volkanulutas@gmail.com&lt;/a&gt; adresini kullanabilirsiniz.&lt;/p&gt;
</description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/categories/ipu%C3%A7lar%C4%B1/">İpuçları</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/latex/">latex</category>
                                
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/visual-code/">visual code</category>
                                
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/miktex/">miktex</category>
                                
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/macos/">macos</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>Latex Kurulumu Windows (Visual Code, MikTex)</title>
                <link>http://volkanulutas.com/posts/2019-10-07-latex-kurulumu/</link>
                <guid isPermaLink="true">http://volkanulutas.com/posts/2019-10-07-latex-kurulumu/</guid>
                <pubDate>Mon, 07 Oct 2019 00:00:00 &#43;0000</pubDate>
                
                    <author>volkanulutas@gmail.com (Volkan Ulutaş)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright>
                
                    <description>&lt;p&gt;Merhabalar, Latex tez yazarken size büyük kolaylık sağlayacaktır. Birçok kurulum türü bulunmasına rağmen zamanınızı çok almayacak bir yöntem paylaşmak istiyorum, umarım işinize yarar.&lt;/p&gt;
&lt;h2 id=&#34;1-gereksinimler&#34;&gt;1. Gereksinimler&lt;/h2&gt;
&lt;p&gt;İlk olarak, aşağıdaki yazılımları indirip, kurulumlarını yapmalısınız.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Windows mimarisine uygun türü seçmeyi unutmayınız (x86/x64).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://strawberryperl.com/&#34;&gt;StrawberryPerl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/download&#34;&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://miktex.org/download&#34;&gt;MikTex&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;2-miktex-kurulumu&#34;&gt;2. Miktex Kurulumu&lt;/h2&gt;
&lt;p&gt;İndirilmiş olan kurulum dosyasına çift tıkladıktan sonra, tüm varsayılan ayarları kabul ederek kurulumu tamamlayanız.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Start &amp;gt; MikTex Console &amp;gt; Updates &amp;gt; Check for updates menüsünde geliniz. Aşağıdaki resimde belirtilmiştir.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;http://volkanulutas.com/images/latex-kurulumu/latexWin_1.png&#34; alt=&#34;metin&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;latexmk&lt;/strong&gt; kurulumunu aratarak aşağıdaki resimdeki gibi yapınız.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://volkanulutas.com/images/latex-kurulumu/latexWin_2.png&#34; alt=&#34;metin&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;3-visual-code-kurulumu-ve-latex-ayarı&#34;&gt;3. Visual Code Kurulumu ve Latex Ayarı&lt;/h2&gt;
&lt;p&gt;Eklentiler bölümünden &amp;ldquo;Latex&amp;rdquo; veya &amp;ldquo;Latex Workshop&amp;rdquo; olarak aratarak ilgili eklentiyi indiriniz.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Open Extension &amp;gt; search for Latex &amp;gt; Install LaTeX Workshop&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;http://volkanulutas.com/images/latex-kurulumu/latexWin_3.png&#34; alt=&#34;metin&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;4-latex-yazma&#34;&gt;4. Latex Yazma&lt;/h2&gt;
&lt;p&gt;&amp;ldquo;.tex&amp;rdquo; uzantılı bir dosya yaratarak bunu Visual Code ile açıp, değişiklik yapıp derleyebilirsiniz.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://volkanulutas.com/images/latex-kurulumu/latexWin_4.png&#34; alt=&#34;metin&#34;&gt;&lt;/p&gt;
&lt;p&gt;Soru, görüş ve önerilerinizi bu sayfaya yorum yapabilirsiniz. Bana erişmek için &lt;a href=&#34;mailto:volkanulutas@gmail.com&#34;&gt;volkanulutas@gmail.com&lt;/a&gt; adresini kullanabilirsiniz.&lt;/p&gt;
</description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/categories/ipu%C3%A7lar%C4%B1/">İpuçları</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/latex/">latex</category>
                                
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/visual-code/">visual code</category>
                                
                            
                                
                                
                                
                                    <category domain="http://volkanulutas.com/tags/miktex/">miktex</category>
                                
                            
                        
                    
                
            </item>
        
    </channel>
</rss>
